{"version":3,"file":"static/js/192.aace59a7.chunk.js","mappings":"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","sources":["pages/DictionaryPage/DictionaryPage.styled.js","components/WordTable/WordsTable.styled.js","components/WordTable/WordsTable.jsx","pages/DictionaryPage/DictionaryPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DictionaryContainer = styled.div`\n  background: ${({ theme }) => theme.white1};\n  padding-top: 32px;\n  padding-left: 32px;\n  padding-right: 32px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const WordsTableContainer = styled.div`\n  margin-top: 32px;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 15px;\n    padding: 18px;\n    background: #fff;\n    margin-top: 28px;\n  }\n`;\n\nexport const TableStyle = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`;\n\nexport const TableHead = styled.thead`\n  background: rgba(133, 170, 159, 0.1);\n`;\n\nexport const HeadRow = styled.th`\n  border-bottom: 1px solid #dbdbdb;\n  border-right: 1px solid #dbdbdb;\n  &:last-child {\n    border-right: none;\n    border-radius: 0 8px 0 0;\n  }\n  &:first-child {\n    border-radius: 8px 0 0 0;\n  }\n  font-weight: 500;\n  font-size: 16px;\n  width: ${({ width }) => width}px;\n  padding: 16px 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const TableBody = styled.tbody`\n  box-sizing: border-box;\n`;\n\nexport const TableRow = styled.td`\n  font-size: 14px;\n  border-top: 1px solid #dbdbdb;\n  border-right: 1px solid #dbdbdb;\n  border-left: none;\n  padding: 8px;\n  &:first-child {\n    border-left: none;\n  }\n  &:last-child {\n    border-right: none;\n    padding: 16px 10px 16px 14px;\n    white-space: pre-wrap;\n    background: ${({ theme }) => theme.white};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    font-weight: 500;\n  }\n\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const FlagIcon = styled.svg`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 28px;\n    height: 28px;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectWords } from '../../redux/selectors';\nimport { fetchOwnWords } from '../../redux/words/operations';\nimport { useTable } from 'react-table';\nimport {\n    FlagIcon,\n  HeadRow,\n  IconContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableStyle,\n  WordsTableContainer,\n} from './WordsTable.styled';\nimport sprite from '../../icons/sprites.svg';\n\nexport const WordsTable = () => {\n  const words = useSelector(selectWords);\n  const dispatch = useDispatch();\n\n  const IconUk = ({ text }) => (\n    <IconContainer>\n      <span>{text}</span> \n      <FlagIcon>\n        <use href={`${sprite}#icon-uk`}>z</use>\n      </FlagIcon>\n    </IconContainer>\n  );\n\n  const IconUa = ({ text }) => (\n    <IconContainer>\n      <span>{text}</span> \n      <FlagIcon>\n        <use href={`${sprite}#icon-ua`}>z</use>\n      </FlagIcon>\n    </IconContainer>\n  );\n\n  useEffect(() => {\n    dispatch(fetchOwnWords());\n  }, [dispatch]);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: () => <IconUk text=\"Word\" />,\n        accessor: 'en',\n        width: 82,\n      },\n      {\n        Header:  () => <IconUa text='Translation'/>,\n        accessor: 'ua',\n        width: 116,\n      },\n      {\n        Header: 'Progress',\n        accessor: 'progress',\n        width: 95,\n      },\n      {\n        Header: '',\n        accessor: 'actions',\n        Cell: () => <button>Add</button>,\n        width: 50,\n      },\n    ],\n    []\n  );\n\n  const data = React.useMemo(() => words || [], [words]);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <WordsTableContainer>\n      <TableStyle {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <HeadRow {...column.getHeaderProps()} width={column.width}>\n                  {column.render('Header')}\n                </HeadRow>\n              ))}\n            </tr>\n          ))}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <TableRow {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </TableRow>\n                ))}\n              </tr>\n            );\n          })}\n        </TableBody>\n      </TableStyle>\n    </WordsTableContainer>\n  );\n};\n","import { Dashboard } from 'components/Dashboard/Dashboard';\nimport React from 'react';\nimport { DictionaryContainer } from './DictionaryPage.styled';\nimport { WordsTable } from 'components/WordTable/WordsTable';\n\nconst DictionaryPage = () => {\n  return (\n    <DictionaryContainer>\n      <Dashboard />\n      <WordsTable />\n    </DictionaryContainer>\n  );\n};\n\nexport default DictionaryPage;\n"],"names":["DictionaryContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","white1","WordsTableContainer","TableStyle","_templateObject2","TableHead","_templateObject3","HeadRow","_templateObject4","width","TableBody","_templateObject5","TableRow","_templateObject6","_ref2","white","IconContainer","_templateObject7","FlagIcon","_templateObject8","WordsTable","words","useSelector","selectWords","dispatch","useDispatch","IconUk","text","_jsxs","children","_jsx","href","concat","sprite","IconUa","useEffect","fetchOwnWords","columns","React","Header","accessor","Cell","data","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","_objectSpread","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Dashboard"],"sourceRoot":""}