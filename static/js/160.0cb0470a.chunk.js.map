{"version":3,"file":"static/js/160.0cb0470a.chunk.js","mappings":"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","sources":["pages/RecommendPage/RecommendPage.styled.js","components/WordsPagination/WordsPagination.styled.js","components/WordsPagination/WordsPagination.jsx","pages/RecommendPage/RecommendPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RecommendContainer = styled.div`\n  background: ${({ theme }) => theme.white1};\n  padding-top: 32px;\n  padding-left: 32px;\n  padding-right: 32px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n`;\n\n\nexport const ArrowBtn = styled.button`\n  background: none;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 2px;\n`;\n\nexport const ArrowSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const ArrowSpanBtn = styled.span`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    font-weight: 500;\n    font-size: 14px;\n    text-align: start;\n  }\n`;\n","import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ReactPaginateStyle = styled(ReactPaginate)`\n  display: flex;\n  cursor: pointer\n\n`;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllWords } from '../../redux/words/operations';\nimport { PaginationContainer, ReactPaginateStyle } from './WordsPagination.styled';\nimport { selectWords } from '../../redux/selectors';\n\nexport const WordsPagination = ({ pageCount }) => {\n  const dispatch = useDispatch();\n  const words = useSelector(selectWords);\n  const currentPage = words.currentPage;\n\n  const perPage = 7;\n  const handlePageClick = selected => {\n    dispatch(fetchAllWords({ page: selected + 1, perPage }));\n  };\n\n  return (\n    <PaginationContainer>\n      <button onClick={() => handlePageClick(0)} disabled={currentPage === 0}>\n        {'<<'}\n      </button>\n      <ReactPaginateStyle\n        pageCount={pageCount}\n        nextLabel=\">\"\n        onPageChange={({ selected }) => handlePageClick(selected)}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={1}\n        previousLabel=\"<\"\n        breakLabel=\"...\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n      <button\n        onClick={() => handlePageClick(pageCount - 1)}\n        disabled={currentPage === pageCount - 1}\n      >\n        {'>>'}\n      </button>\n    </PaginationContainer>\n  );\n};\n","import React, { useEffect } from 'react';\nimport {\n  ArrowBtn,\n  ArrowSpanBtn,\n  ArrowSvg,\n  RecommendContainer,\n} from './RecommendPage.styled';\nimport { Dashboard } from 'components/Dashboard/Dashboard';\nimport { IconContainer } from 'components/Layout/Layout.styled';\nimport { FlagIcon } from 'components/AddWordModal/AddWordModal.styled';\nimport sprite from '../../icons/sprites.svg';\nimport { useDispatch } from 'react-redux';\nimport { addWordFromOtherUser, fetchAllWords } from '../../redux/words/operations';\nimport { WordsTable } from 'components/WordTable/WordsTable';\nimport toast from 'react-hot-toast';\nimport { WordsPagination } from 'components/WordsPagination/WordsPagination';\nimport { useSelector } from 'react-redux';\nimport { selectWords } from '../../redux/selectors';\n\nconst RecommendPage = () => {\n  const dispatch = useDispatch();\n  const words = useSelector(selectWords);\n  const totalPages = words.totalPages;\n\n  const handleAddToDictionary = (word) => {\n    console.log(word._id);\n    dispatch(addWordFromOtherUser(word._id))\n    .unwrap()\n      .then(() => {\n        toast.success('Word added successfully');\n    dispatch(fetchAllWords());\n  })\n  .catch(error => {\n    toast.error(error);\n  });\n  }\n\n\n  const IconUk = ({ text }) => (\n    <IconContainer>\n      <span>{text}</span>\n      <FlagIcon>\n        <use href={`${sprite}#icon-uk`}></use>\n      </FlagIcon>\n    </IconContainer>\n  );\n\n  const IconUa = ({ text }) => (\n    <IconContainer>\n      <span>{text}</span>\n      <FlagIcon>\n        <use href={`${sprite}#icon-ua`}></use>\n      </FlagIcon>\n    </IconContainer>\n  );\n\n  const ArrowIcon = ({ text, word}) => (\n        <ArrowBtn type='button' onClick={()=> {handleAddToDictionary(word)}}>\n          <ArrowSpanBtn>{text}</ArrowSpanBtn>\n          <ArrowSvg>\n            <use href={`${sprite}#icon-horizontal`}></use>\n          </ArrowSvg>\n        </ArrowBtn>\n\n  );\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: () => <IconUk text=\"Word\" />,\n        accessor: 'en',\n        width: 90,\n      },\n      {\n        Header: () => <IconUa text=\"Translation\" />,\n        accessor: 'ua',\n        width: 116,\n      },\n      {\n        Header: 'Category',\n        accessor: 'category',\n        width: 99,\n      },\n      {\n        Header: '',\n        accessor: 'actions',\n        Cell: ({row}) => <ArrowIcon text=\"Add to dictionary\" word = {row.original} />,\n        width: 50,\n      },\n    ],\n    []\n  );\n\n\n  useEffect(() => {\n    dispatch(fetchAllWords({ page: 1, perPage: 10 })); // Загрузка першої сторінки при завантаженні компонента\n  }, [dispatch]);\n\n  return (\n    <RecommendContainer>\n      <Dashboard />\n      <WordsTable columns={columns} />\n      <WordsPagination pageCount={totalPages} />\n    </RecommendContainer>\n  );\n};\n\nexport default RecommendPage;\n"],"names":["RecommendContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","white1","ArrowBtn","_templateObject2","ArrowSvg","_templateObject3","ArrowSpanBtn","_templateObject4","PaginationContainer","ReactPaginateStyle","ReactPaginate","WordsPagination","pageCount","dispatch","useDispatch","currentPage","useSelector","selectWords","handlePageClick","selected","fetchAllWords","page","perPage","_jsxs","children","_jsx","onClick","disabled","nextLabel","onPageChange","_ref2","pageRangeDisplayed","marginPagesDisplayed","previousLabel","breakLabel","containerClassName","activeClassName","renderOnZeroPageCount","totalPages","IconUk","text","IconContainer","FlagIcon","href","concat","sprite","IconUa","ArrowIcon","_ref3","word","type","console","log","_id","addWordFromOtherUser","unwrap","then","toast","catch","error","handleAddToDictionary","columns","React","Header","accessor","width","Cell","_ref4","row","original","useEffect","Dashboard","WordsTable"],"sourceRoot":""}