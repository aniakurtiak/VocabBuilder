{"version":3,"file":"static/js/182.5dcd387f.chunk.js","mappings":"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","sources":["pages/TrainingPage/TrainingPage/TrainingPage.styled.js","components/StartTraining/StartTraining.styled.js","components/StartTraining/StartTraining.jsx","components/TrainingCard/TrainingCard.styled.js","components/TrainingCard/TrainingCard.jsx","components/TrainingRoom/TrainingRoom.styled.js","components/WellDoneModal/WellDoneModal.styled.js","components/WellDoneModal/WellDoneModal.jsx","components/TrainingRoom/TrainingRoom.jsx","pages/TrainingPage/TrainingPage.jsx","../node_modules/@babel/runtime/helpers/esm/extends.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TrainingPageContainer = styled.div`\n  background: ${({ theme }) => theme.white1};\n  padding-top: 24px;\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-bottom: 76px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n\n    padding-top: 62;\n    padding-left: 94px;\n    padding-right: 93px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StartContainer = styled.div`\n  margin-top: 51px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 78px;\n    align-items: start;\n  }\n\n    @media screen and (min-width: 1440px) {\n    margin-top: 131px;\n    padding: 18px 25px;\n    flex-direction: row;\n    }\n`;\n\n\nexport const PictureStyle = styled.picture`\n  display: flex;\n\n    @media screen and (min-width: 1440px) {\n        order: 2;\n    }\n`;\n\nexport const ContentContainer = styled.div`\n@media screen and (min-width: 1440px) {\n    display: flex;\n    flex-direction: column;\n    width: 581px;\n    order: 1;\n}\n`;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  margin-top: 32px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n    margin-bottom: 32px;\n    font-size: 20px;\n  }\n\n    @media screen and (min-width: 1440px) {\n    margin-top: 0;\n    margin-bottom: 32px;\n    }\n`;\n\nexport const Text = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.3;\n  margin-bottom: 132px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.5;\n    margin-bottom: 64px;\n  }\n`;\n\nexport const NavigateContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 151px;\n  }\n`;\n\nexport const LinkStyle = styled(Link)`\n  background: ${({ theme }) => theme.green};\n  color: ${({ theme }) => theme.white};\n  border-radius: 30px;\n  padding: 16px;\n  width: 343px;\n  height: 56px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  text-align: center;\n\n  &:hover {\n    background: #a5c0b8;\n    color: ${({ theme }) => theme.white};\n  }\n\n    @media screen and (min-width: 1440px) {\npadding: 14px;\nwidth: 215px;\n    }\n`;\n\nexport const LinkStyle2 = styled(Link)`\n  font-weight: 700;\n  font-size: 16px;\n  color: rgba(18, 20, 23, 0.5);\n  text-align: center;\n\n  &:hover {\n    color: ${({ theme }) => theme.black};\n  }\n\n  @media screen and (min-width: 768px) {\n    border: 1px solid ${({ theme }) => theme.green};\n    border-radius: 30px;\n    padding: 14px;\n    width: 203px;\n    height: 56px;\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 1.56;\n    color: ${({ theme }) => theme.green};\n\n    &:hover {\n      background: ${({ theme }) => theme.green};\n      color: ${({ theme }) => theme.white};\n    }\n  }\n`;\n","import React, { useState } from 'react'\nimport reportMob from '../../img/reportMob.png';\nimport repotMob2x from '../../img/reportMob@2x.png';\nimport reportMobWebp from '../../img/reportMob.webp';\nimport reportMob2xWebp from '../../img/reportMob@2x.webp';\nimport report from '../../img/report.png';\nimport report2x from '../../img/report@2x.png';\nimport reportWebp from '../../img/report.webp';\nimport report2xWebp from '../../img/report@2x.webp';\nimport { ContentContainer, LinkStyle, LinkStyle2, NavigateContainer, PictureStyle, StartContainer, Text, Title } from './StartTraining.styled';\nimport { AddWordModal } from 'components/AddWordModal/AddWordModal';\nimport { Modal } from 'components/Modal/Modal';\n\n\nexport const StartTraining = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  return (\n    <StartContainer>\n    <PictureStyle>\n      <source\n        srcSet={`${reportWebp} 1x, ${report2xWebp} 2x`}\n        media=\"(min-width: 768px)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcSet={`${report} 1x, ${report2x} 2x`}\n        media=\"(min-width: 768px)\"\n      />\n      <source\n        srcSet={`${reportMobWebp} 1x, ${reportMob2xWebp} 2x`}\n        media=\"(max-width: 767px)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcSet={`${reportMob} 1x, ${repotMob2x} 2x`}\n        media=\"(max-width: 767px)\"\n      />\n      <img src={reportMobWebp} alt=\"report form\" />\n    </PictureStyle>\n   <ContentContainer>\n      <Title>You don't have a single word to learn right now. </Title>\n      <Text>\n        Please create or add a word to start the workout. We want to improve\n        your vocabulary and develop your knowledge, so please share the words\n        you are interested in adding to your study.\n      </Text>\n      <NavigateContainer>\n        <LinkStyle to = '/dictionary' onClick={toggleModal}>Add word</LinkStyle>\n        <LinkStyle2 to = '/dictionary'>Cancel</LinkStyle2>\n      </NavigateContainer>\n   </ContentContainer>\n\n   {isOpen && (\n        <Modal toggleModal={toggleModal}>\n        <AddWordModal oggleModal={toggleModal}/>\n        </Modal>\n      )}\n  </StartContainer>\n  )\n}\n","import styled from 'styled-components';\n\nexport const TrainingListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 343px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n\n    @media screen and (min-width: 1440px) {\n      flex-direction: row;\n      width: 1024px;\n    }\n  }\n`;\n\nexport const TaskItem = styled.li`\n  border-bottom: 1px solid #dbdbdb;\n  border-radius: 8px 8px 0 0;\n  padding: 22px 22px 18px 22px;\n  width: 100%;\n  height: 195px;\n  background: ${({ theme }) => theme.white};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  &:last-child {\n    border-bottom: none;\n    border-radius: 0 0 8px 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 282px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 302px;\n    border-bottom: none;\n    border-right: 1px solid #dbdbdb;\n    border-radius: 8px 0 0 0;\n  }\n\n  &:last-child {\n    border-right: none;\n  }\n`;\n\nexport const InputStyle = styled.input`\n  border: none;\n  background: none;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    color: ${({ theme }) => theme.black};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const BtnNext = styled.button`\n  background: none;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  color: rgba(18, 20, 23, 0.5);\n\n  &:hover {\n    color: ${({ theme }) => theme.black};\n  }\n`;\n\nexport const WrapforUk = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\n  font-size: 14px;\n  justify-content: flex-end;\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const LanText = styled.p``;\n","import {\n  BtnNext,\n  Container,\n  InputStyle,\n  TaskItem,\n  Text,\n  TrainingListContainer,\n  WrapforUk,\n} from './TrainingCard.styled';\nimport { IconSvg } from 'components/Dashboard/Dashboard.styled';\nimport sprite from '../../icons/sprites.svg';\nimport { FlagIcon } from 'components/AddWordModal/AddWordModal.styled';\n\nexport const TrainingCard = ({\n  task,\n  onNextClick,\n  inputEnValue,\n  setInputEnValue,\n  inputUaValue,\n  setInputUaValue,\n  showNextButton,\n}) => {\n\n  const handleNext = () => {\n    onNextClick(task);\n  };\n\n  return (\n    <TrainingListContainer>\n      <TaskItem>\n        {task.task === 'ua' ? (\n          <Text>{task.en}</Text>\n        ) : (\n          <InputStyle\n            type=\"text\"\n            value={inputEnValue}\n            onChange={e => setInputEnValue(e.target.value)}\n            placeholder=\"Enter translation\"\n          />\n        )}\n        <Container>\n          {task.task === 'en' && showNextButton && (\n            <BtnNext onClick={handleNext}>\n              Next\n              <IconSvg>\n                <use href={`${sprite}#icon-horizontal`}></use>\n              </IconSvg>\n            </BtnNext>\n          )}\n          <WrapforUk>\n            <FlagIcon>\n              <use href={`${sprite}#icon-uk`}></use>\n            </FlagIcon>\n            <p>English</p>\n          </WrapforUk>\n        </Container>\n      </TaskItem>\n\n      <TaskItem>\n          {task.task === 'en' ? (\n            <Text>{task.ua}</Text>\n          ) : (\n            <InputStyle\n              type=\"text\"\n              value={inputUaValue}\n              onChange={e => setInputUaValue(e.target.value)}\n              placeholder=\"Введіть переклад\"\n            />\n          )}\n        <Container>\n        {task.task === 'ua' && showNextButton && (\n          <BtnNext onClick={handleNext}>\n            Next\n            <IconSvg>\n              <use href={`${sprite}#icon-horizontal`}></use>\n            </IconSvg>\n          </BtnNext>\n        )}\n          <WrapforUk>\n            <FlagIcon>\n              <use href={`${sprite}#icon-ua`}></use>\n            </FlagIcon>\n            <p>Ukrainian</p>\n          </WrapforUk>\n        </Container>\n      </TaskItem>\n    </TrainingListContainer>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const TrainingListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 343px;\n`;\n\nexport const TaskItem = styled.li`\n  border-bottom: 1px solid #dbdbdb;\n  border-radius: 8px 8px 0 0;\n  padding: 22px 22px 18px 22px;\n  width: 100%;\n  height: 195px;\n  background: ${({ theme }) => theme.white};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  &:last-child {\n    border-bottom: none;\n    border-radius: 0 0 8px 8px;\n  }\n`;\n\nexport const InputStyle = styled.input`\n    border: none;\n    background: none;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.5;\n    width: 100%;\n\n    &:focus {\n        outline: none;\n\n    }\n\n    &::placeholder {\n        color: ${({ theme }) => theme.black};\n\n    }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\nfont-size: 14px;\n`;\n\nexport const BtnNext = styled.button`\n    background: none;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\nfont-size: 16px;\nline-height: 1.5;\ncolor: rgba(18, 20, 23, 0.5);\n\n    &:hover {\n        color: ${({ theme }) => theme.black};\n    }\n`;\n\nexport const WrapforUk = styled.div`\n   display: flex;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\nfont-size: 14px;\njustify-content: flex-end;\n`;\n\nexport const BtnContainer = styled.div`\nmargin-top: 116px;\n   display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    flex-direction: row;\n    align-items: center;\n    justify-content: start;\n    gap: 10px;\n    margin-bottom: 151px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 80px;\n  }\n  `;\n\n  export const BtnSave = styled.button`\n  background: ${({ theme }) => theme.green};\n  color: ${({ theme }) => theme.white};\n  border-radius: 30px;\n  padding: 16px;\n  width: 343px;\n  height: 56px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  text-align: center;\n\n  &:hover {\n    background: #a5c0b8;\n    color: ${({ theme }) => theme.white};\n  }\n\n@media screen and (min-width: 768px) {\n    width: 203px;\n}\n\n    @media screen and (min-width: 1440px) {\npadding: 14px;\nwidth: 215px;\n    }\n`;\n\nexport const LinkCancel = styled(Link)`\n  font-weight: 700;\n  font-size: 16px;\n  color: rgba(18, 20, 23, 0.5);\n  text-align: center;\n  background: none;\n\n  &:hover {\n    color: ${({ theme }) => theme.black};\n  }\n\n  @media screen and (min-width: 768px) {\n    border: 1px solid ${({ theme }) => theme.green};\n    border-radius: 30px;\n    padding: 14px;\n    width: 203px;\n    height: 56px;\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 1.56;\n    color: ${({ theme }) => theme.green};\n\n    &:hover {\n      background: ${({ theme }) => theme.green};\n      color: ${({ theme }) => theme.white};\n    }\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  position: relative;\n  width: 25px;\n  height: 30px;\n  margin-left: 299px;\n\n  @media screen and (min-width: 768px) {\n    margin-left: 646px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-left: 999px;\n  }\n`;\n\nexport const ProgressNumber = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;","import styled from 'styled-components';\n\nexport const WellDoneContainer = styled.div`\n  position: absolute;\n  width: 342px;\n  max-height: 100vh;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scalex(1);\n  border-radius: 15px;\n  background: ${({ theme }) => theme.green};\n  padding: 48px 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 527px;\n    padding: 48px 64px;\n  }\n`;\n\nexport const BtnClose = styled.svg`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n    top: 20px;\n    right: 20px;\n  }\n`;\n\nexport const Title = styled.h2`\nfont-weight: 600;\nfont-size: 24px;\nline-height: 1.17;\nletter-spacing: -0.02em;\ntext-align: center;\ncolor: ${({ theme }) => theme.white};\nmargin-bottom: 28px;\n\n@media screen and (min-width: 768px) {\n  font-size: 40px;\nline-height: 1.2;\n\n}\n`;\n\nexport const PictureStyle = styled.picture`\ndisplay: flex;\njustify-content: end;\n`;\n\nexport const ColumnsWrapper = styled.div`\ndisplay: flex;\ngap: 32px;\nmargin-bottom: 24px;\n\n@media screen and (min-width: 768px) {\n  gap: 64px;\n}\n`;\n\nexport const ColumnsTitle = styled.h3`\nfont-weight: 400;\nfont-size: 14px;\nline-height: 1.5;\ncolor: rgba(252, 252, 252, 0.5);\nmargin-bottom: 8px;\n\n@media screen and (min-width: 768px) {\n  font-size: 16px;\n} \n`;\n\nexport const WordsContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 4px;\nfont-weight: 500;\nfont-size: 16px;\nline-height: 150%;\ncolor: ${({ theme }) => theme.white};\n\n@media screen and (min-width: 768px) {\n  font-size: 20px;\n}\n`;","import React from 'react';\nimport {\n  BtnClose,\n  ColumnsTitle,\n  ColumnsWrapper,\n  PictureStyle,\n  Title,\n  WellDoneContainer,\n  WordsContainer,\n} from './WellDoneModal.styled';\nimport sprite from '../../icons/sprites.svg';\nimport bookMob from '../../img/bookMob.png';\nimport bookMob2x from '../../img/bookMob@2x.png';\nimport bookMobWeb from '../../img/bookMob.webp';\nimport bookMob2xWeb from '../../img/bookMob@2x.webp';\nimport book from '../../img/book.png';\nimport book2x from '../../img/book @2x.png';\nimport bookWeb from '../../img/book.webp';\nimport book2xWeb from '../../img/book @2x.webp';\nimport { useSelector } from 'react-redux';\nimport { selectCheckedAnswers } from '../../redux/selectors';\n\nexport const WellDoneModal = ({ toggleModal }) => {\n  const checkAnswers = useSelector(selectCheckedAnswers);\n\n  const mistakes = checkAnswers.filter(answer => !answer.isDone);\n  const correctAnswers = checkAnswers.filter(answer => answer.isDone);\n\n  return (\n    <WellDoneContainer>\n      <BtnClose onClick={toggleModal} type=\"button\">\n        <svg>\n          <use href={`${sprite}#icon-close`}></use>\n        </svg>\n      </BtnClose>\n      <Title>Well Done!</Title>\n      <ColumnsWrapper>\n        <WordsContainer>\n          <ColumnsTitle>Correct answers:</ColumnsTitle>\n          {correctAnswers.map((answer, index) => (\n            <p key={index}>{answer.en}</p>\n          ))}\n        </WordsContainer>\n        <WordsContainer>\n          <ColumnsTitle>Mistakes:</ColumnsTitle>\n          {mistakes.map((answer, index) => (\n            <p key={index}>{answer.en}</p>\n          ))}\n        </WordsContainer>\n      </ColumnsWrapper>\n      <PictureStyle>\n        <source\n          srcSet={`${bookWeb} 1x, ${book2xWeb} 2x`}\n          media=\"(min-width: 768px)\"\n          type=\"image/webp\"\n        />\n        <source\n          srcSet={`${book} 1x, ${book2x} 2x`}\n          media=\"(min-width: 768px)\"\n        />\n        <source\n          srcSet={`${bookMobWeb} 1x, ${bookMob2xWeb} 2x`}\n          media=\"(max-width: 767px)\"\n          type=\"image/webp\"\n        />\n        <source\n          srcSet={`${bookMob} 1x, ${bookMob2x} 2x`}\n          media=\"(max-width: 767px)\"\n        />\n        <img src={bookMobWeb} alt=\"report form\" />\n      </PictureStyle>\n    </WellDoneContainer>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectAnswers, selectStatistics, selectTasks } from '../../redux/selectors';\nimport { TrainingCard } from 'components/TrainingCard/TrainingCard';\nimport {\n  BtnContainer,\n  BtnSave,\n  LinkCancel,\n  ProgressContainer,\n  ProgressNumber,\n} from './TrainingRoom.styled';\nimport { setAnswers, setCheckedAnswers } from '../../redux/words/wordsSlice';\nimport { sendAnswers } from '../../redux/words/operations';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { Modal } from 'components/Modal/Modal';\nimport { WellDoneModal } from 'components/WellDoneModal/WellDoneModal';\nimport { ProgressBar } from 'components/StartTraining/ProgressBar/ProgressBar';\n\nexport const TrainingRoom = () => {\n  const tasks = useSelector(selectTasks);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [inputEnValues, setInputEnValues] = useState({});\n  const [inputUaValues, setInputUaValues] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n  \n  const dispatch = useDispatch();\n  const answers = useSelector(selectAnswers);\n  const navigate = useNavigate();\n  const statistics = useSelector(selectStatistics);\n\n\n  const toggleModal = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  const handleEnInput = task => {\n    const inputEnValue = inputEnValues[task._id] || '';\n    if (inputEnValue.trim() !== '') {\n      const answerCard = {\n        _id: task._id,\n        en: inputEnValue,\n        ua: task.ua,\n        task: task.task,\n      };\n      dispatch(setAnswers([...answers, answerCard]));\n      setInputEnValues(prevInputValues => {\n        return { ...prevInputValues, [task._id]: '' };\n      });\n    }\n  };\n\n  const handleUaInput = task => {\n    const inputUaValue = inputUaValues[task._id] || '';\n    if (inputUaValue.trim() !== '') {\n      const answerCard = {\n        _id: task._id,\n        en: task.en,\n        ua: inputUaValue,\n        task: task.task,\n      };\n      dispatch(setAnswers([...answers, answerCard]));\n      setInputEnValues(prevInputValues => {\n        return { ...prevInputValues, [task._id]: '' };\n      });\n    }\n  };\n\n  const handleNextClick = task => {\n    handleEnInput(task);\n    handleUaInput(task);\n    if (currentCardIndex < tasks.tasks.length - 1) {\n      setCurrentCardIndex(prevIndex => prevIndex + 1);\n    }\n  };\n\n  const handleSave = task => {\n    handleNextClick(task);\n    dispatch(sendAnswers(answers))\n      .unwrap()\n      .then(data => {\n        dispatch(setCheckedAnswers(data));\n        toggleModal();\n      })\n      .catch(error => {\n        toast.error('Something went wrong. Your progress will not be saved!');\n        navigate('/dictionary');\n      });\n  };\n\nconst tasksCount = statistics.totalCount*2;\n\n  return (\n    <div>\n        {statistics.totalCount > 0 && (\n        <ProgressContainer>\n          <ProgressBar progress={tasksCount} />\n          <ProgressNumber>{tasksCount}</ProgressNumber>\n        </ProgressContainer>\n      )}\n      {tasks.tasks && tasks.tasks[currentCardIndex] && (\n        <TrainingCard\n          task={tasks.tasks[currentCardIndex]}\n          onNextClick={handleNextClick}\n          inputEnValue={inputEnValues[tasks.tasks[currentCardIndex]._id] || ''}\n          setInputEnValue={value =>\n            setInputEnValues({\n              ...inputEnValues,\n              [tasks.tasks[currentCardIndex]._id]: value,\n            })\n          }\n          inputUaValue={inputUaValues[tasks.tasks[currentCardIndex]._id] || ''}\n          setInputUaValue={value =>\n            setInputUaValues({\n              ...inputUaValues,\n              [tasks.tasks[currentCardIndex]._id]: value,\n            })\n          }\n          showNextButton={currentCardIndex < tasks.tasks.length - 1}\n        />\n      )}\n\n      <BtnContainer>\n        <BtnSave type=\"submit\" onClick={handleSave}>\n          Save\n        </BtnSave>\n        <LinkCancel to=\"/dictionary\">Cancel</LinkCancel>\n      </BtnContainer>\n       {/* )}  */}\n\n      {isOpen && (\n        <Modal toggleModal={toggleModal}>\n          <WellDoneModal toggleModal={toggleModal} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TrainingPageContainer } from './TrainingPage/TrainingPage.styled';\nimport { StartTraining } from '../../components/StartTraining/StartTraining';\nimport { fetchTasks } from '../../redux/words/operations';\nimport { selectStatistics } from '../../redux/selectors';\nimport { TrainingRoom } from 'components/TrainingRoom/TrainingRoom';\n\nconst TrainingPage = () => {\n  const dispatch = useDispatch();\nconst statistics = useSelector(selectStatistics);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n\n  return (\n    <TrainingPageContainer>\n      {statistics.totalCount ? <TrainingRoom /> :  <StartTraining />}\n    </TrainingPageContainer>\n  );\n};\n\nexport default TrainingPage;\n\n\n\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}"],"names":["TrainingPageContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","white1","StartContainer","PictureStyle","_templateObject2","ContentContainer","_templateObject3","Title","_templateObject4","Text","_templateObject5","NavigateContainer","_templateObject6","LinkStyle","Link","_templateObject7","green","_ref2","white","_ref3","LinkStyle2","_templateObject8","_ref4","black","_ref5","_ref6","_ref7","_ref8","StartTraining","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","toggleModal","prevState","_jsxs","children","_jsx","srcSet","concat","reportWebp","report2xWebp","media","type","report","report2x","reportMobWebp","reportMob2xWebp","reportMob","repotMob2x","src","alt","to","onClick","Modal","AddWordModal","oggleModal","TrainingListContainer","TaskItem","InputStyle","Container","BtnNext","WrapforUk","_templateObject9","TrainingCard","task","onNextClick","inputEnValue","setInputEnValue","inputUaValue","setInputUaValue","showNextButton","handleNext","en","value","onChange","e","target","placeholder","IconSvg","href","sprite","FlagIcon","ua","BtnContainer","BtnSave","LinkCancel","_templateObject10","_ref9","_ref10","_ref11","ProgressContainer","_templateObject11","ProgressNumber","_templateObject12","WellDoneContainer","BtnClose","ColumnsWrapper","ColumnsTitle","WordsContainer","WellDoneModal","checkAnswers","useSelector","selectCheckedAnswers","mistakes","filter","answer","isDone","correctAnswers","map","index","bookWeb","book2xWeb","book","book2x","bookMobWeb","bookMob2xWeb","bookMob","bookMob2x","TrainingRoom","tasks","selectTasks","currentCardIndex","setCurrentCardIndex","_useState3","_useState4","inputEnValues","setInputEnValues","_useState5","_useState6","inputUaValues","setInputUaValues","_useState7","_useState8","dispatch","useDispatch","answers","selectAnswers","navigate","useNavigate","statistics","selectStatistics","handleNextClick","_id","trim","answerCard","setAnswers","_toConsumableArray","prevInputValues","_objectSpread","_defineProperty","handleEnInput","handleUaInput","length","prevIndex","tasksCount","totalCount","ProgressBar","progress","sendAnswers","unwrap","then","data","setCheckedAnswers","catch","error","toast","useEffect","fetchTasks","_extends","Object","assign","bind","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this"],"sourceRoot":""}