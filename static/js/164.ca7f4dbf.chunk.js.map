{"version":3,"file":"static/js/164.ca7f4dbf.chunk.js","mappings":"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","sources":["icons/search.svg","components/Filters/Filters.styled.js","components/Categories/Categories.styled.js","components/Categories/Categories.jsx","components/Filters/Filters.jsx","components/Dashboard/Dashboard.jsx","components/WordTable/WordsTable.styled.js","components/WordTable/WordsTable.jsx","components/WordsPagination/WordsPagination.styled.js","components/WordsPagination/WordsPagination.jsx","pages/DictionaryPage/DictionaryPage.styled.js","components/EditWordModal/EditWordModal.styled.js","components/EditWordModal/EditWordModal.jsx","components/ActionsPopover/ActionsPopover.styled.js","components/ActionsPopover/ActionsPopover.jsx","pages/DictionaryPage/DictionaryPage.jsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.167 15.833a6.667 6.667 0 1 0 0-13.333 6.667 6.667 0 0 0 0 13.333ZM17.5 17.5l-3.625-3.625\",\n    stroke: \"#121417\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.0c70c359be9f625367cb2a522feff44d.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { ReactComponent as SearchSvg } from '../../icons/search.svg';\n\nexport const FiltersContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  margin-bottom: 36px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: start;\n    margin-bottom: 28px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    justify-content: center;\n    margin-bottom: 0;\n  }\n\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const SearchInput = styled.input`\n  border: 1px solid rgba(18, 20, 23, 0.1);\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 343px;\n  height: 48px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  background: ${({ theme }) => theme.white1};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.black};\n  }\n\n  &:hover {\n    outline: none;\n    border-color: ${({ theme }) => theme.green};\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.green};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 274px;\n  }\n`;\n\nexport const SearchIcon = styled(SearchSvg)`\n  position: absolute;\n  right: 24px;\n  top: 14px;\n`;\n","import styled from 'styled-components';\n\nexport const CategoriesWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 8px;\n    align-items: center;\n  }\n`;\n\nexport const selectStyles = {\n  input: (provided, state) => ({\n    ...provided,\n    margin: '0',\n    padding: '0',\n  }),\n\n  valueContainer: (provided, state) => ({\n    ...provided,\n    margin: '0',\n    padding: '0',\n  }),\n\n  control: (provided, state) => ({\n    ...provided,\n    border: '1px solid rgba(18, 20, 23, 0.1)',\n    borderRadius: '15px',\n    padding: '12px 24px',\n    width: '343px',\n    height: '48px',\n    background: '#f8f8f8',\n\n    '&:hover': {\n      outline: 'none',\n      borderColor: '#85aa9f',\n      boxShadow: 'none',\n    },\n\n    '&:focus-within': {\n      outline: 'none',\n      borderColor: '#85aa9f',\n      boxShadow: 'none',\n    },\n\n    '@media screen and (min-width: 768px)': {\n      width: '164px',\n    },\n  }),\n\n  dropdownIndicator: (provided, state) => ({\n    ...provided,\n    color: '#121417',\n    cursor: 'pointer',\n    padding: '0',\n    '& svg': {\n      width: '20px',\n      height: '20px',\n      strokeWidth: '0.02px',\n      '&:hover': {\n        fill: '#85aa9f',\n      },\n    },\n  }),\n\n  placeholder: (provided, state) => ({\n    ...provided,\n    color: '#121417',\n    fontSize: '16px',\n    fontStyle: 'normal',\n    fontWeight: '500',\n    lineHeight: '1.5',\n    padding: '0',\n  }),\n\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: state.isFocused ? '#85aa9f' : 'transparent', // зелений колір для опції при наведенні\n    fontWeight: '500',\n    lineHeight: '1.5',\n    color: '#121417',\n  }),\n\n  singleValue: (provided, state) => ({\n    ...provided,\n    fontWeight: '500',\n    lineHeight: '1.5',\n    color: '#121417',\n  }),\n};\n\nexport const RadioBtnWrapper = styled.div`\n  margin-top: 8px;\n  display: flex;\n  font-weight: 400;\n  font-size: 12px;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n`;\n\nexport const RadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const RadioInput = styled.input`\n  position: relative;\n  appearance: none;\n  width: 18px;\n  height: 18px;\n  border: 2px solid rgba(18, 20, 23, 0.2);\n  border-radius: 50%;\n  cursor: pointer;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 10px;\n    height: 10px;\n    background-color: transparent;\n    border-radius: 50%;\n  }\n\n  &:checked {\n    border-color: ${({ theme }) => theme.green};\n    &::before {\n      background-color: ${({ theme }) => theme.green};\n    }\n  }\n  @keyframes borderChange {\n    from {\n      border: 2px solid rgba(18, 20, 23, 0.2);\n    }\n    to {\n      border-color: ${({ theme }) => theme.green};\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectCategories,\n  selectSelectedCategory,\n} from '../../redux/selectors';\nimport Select from 'react-select';\nimport {\n    CategoriesWrapper,\n  RadioBtnWrapper,\n  RadioInput,\n  RadioLabel,\n  selectStyles,\n} from '../Categories/Categories.styled';\nimport { setCategory, setVerbType } from '../../redux/filters/filtersSlice';\n\nexport const Categories = () => {\n  const categories = useSelector(selectCategories);\n  const selectedCategory = useSelector(selectSelectedCategory);\n  const dispatch = useDispatch();\n\n  const handleCategoryChange = selectedOption => {\n    dispatch(setCategory(selectedOption));\n  };\n\n  const handleVerbTypeChange = event => {\n    dispatch(setVerbType(event.target.value));\n  };\n\n  return (\n    <CategoriesWrapper>\n      <Select\n        styles={selectStyles}\n        options={categories}\n        value={selectedCategory}\n        onChange={handleCategoryChange}\n        placeholder=\"Categories\"\n      />\n      {selectedCategory.value === 'Verb' && (\n        <RadioBtnWrapper>\n          <RadioLabel>\n            <RadioInput\n              type=\"radio\"\n              name=\"verbType\"\n              value=\"regular\"\n              onChange={handleVerbTypeChange}\n            />{' '}\n            Regular\n          </RadioLabel>\n          <RadioLabel>\n            <RadioInput\n              type=\"radio\"\n              name=\"verbType\"\n              value=\"irregular\"\n              onChange={handleVerbTypeChange}\n            />{' '}\n            Irregular\n          </RadioLabel>\n        </RadioBtnWrapper>\n      )}\n    </CategoriesWrapper>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchCategories } from '../../redux/filters/operations';\nimport { setKeyword } from '../../redux/filters/filtersSlice';\nimport {\n  FiltersContainer,\n  InputWrapper,\n  SearchIcon,\n  SearchInput,\n} from './Filters.styled';\nimport { Categories } from 'components/Categories/Categories';\n\nexport const Filters = () => {\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  const handleKeywordChange = event => {\n    setSearchKeyword(event.target.value.trim());\n  };\n\n  useEffect(() => {\n    const debounceTimer = setTimeout(() => {\n      dispatch(setKeyword(searchKeyword));\n    }, 300);\n\n    return () => {\n      clearTimeout(debounceTimer);\n    };\n  }, [searchKeyword, dispatch]);\n\n  return (\n    <FiltersContainer>\n      <InputWrapper>\n        <SearchInput\n          type=\"text\"\n          value={searchKeyword}\n          onChange={handleKeywordChange}\n          placeholder=\"Find the word\"\n        />\n        <button>\n          <SearchIcon />\n        </button>\n      </InputWrapper>\n      <Categories/>\n    </FiltersContainer>\n  );\n};\n","import { Filters } from 'components/Filters/Filters';\nimport React, { useEffect } from 'react';\nimport {\n  AddWordButton,\n  DashboardContainer,\n  IconSvg,\n  NavLinkStyle,\n  StatisticsContainer,\n  StatisticsText,\n  Wrapper,\n} from './Dashboard.styled';\nimport sprite from '../../icons/sprites.svg';\nimport { selectStatistics } from '../../redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getStatistics } from '../../redux/words/operations';\n\nexport const Dashboard = ({ onClickAddWord }) => {\n  const statistics = useSelector(selectStatistics);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getStatistics());\n  }, [dispatch]);\n\n  return (\n    <DashboardContainer>\n      <Filters />\n      <StatisticsContainer>\n        <StatisticsText>To study: {statistics.totalCount} </StatisticsText>\n        <Wrapper>\n          <AddWordButton type=\"button\" onClick={onClickAddWord}>\n            Add word\n            <IconSvg>\n              <use href={`${sprite}#icon-plus`}></use>\n            </IconSvg>\n          </AddWordButton>\n          <NavLinkStyle to=\"/training\">\n            Train onself\n            <IconSvg>\n              <use href={`${sprite}#icon-horizontal`}></use>\n            </IconSvg>\n          </NavLinkStyle>\n        </Wrapper>\n      </StatisticsContainer>\n    </DashboardContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WordsTableContainer = styled.div`\n  margin-top: 32px;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 15px;\n    padding: 18px;\n    background: #fff;\n    margin-top: 28px;\n    width: 704px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1240px;\n  }\n`;\n\nexport const TableStyle = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`;\n\nexport const TableHead = styled.thead`\n  background: rgba(133, 170, 159, 0.1);\n`;\n\nexport const HeadRow = styled.th`\n  border-bottom: 1px solid #dbdbdb;\n  border-right: 1px solid #dbdbdb;\n  &:last-child {\n    border-right: none;\n    border-radius: 0 8px 0 0;\n  }\n  &:first-child {\n    border-radius: 8px 0 0 0;\n  }\n  font-weight: 500;\n  font-size: 16px;\n  width: ${({ width }) => width}px;\n  padding: 16px 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const TableBody = styled.tbody`\n  box-sizing: border-box;\n`;\n\nexport const TableRow = styled.td`\n  font-size: 14px;\n  border-top: 1px solid #dbdbdb;\n  border-right: 1px solid #dbdbdb;\n  border-left: none;\n  padding: 8px;\n  &:first-child {\n    border-left: none;\n  }\n  &:last-child {\n    border-right: none;\n    padding: 16px 10px 16px 14px;\n    white-space: pre-wrap;\n    background: ${({ theme }) => theme.white};\n  }\n\n  &:nth-child(3n){\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    font-weight: 500;\n  }\n\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectVisibleWords,\n} from '../../redux/selectors';\nimport { useTable } from 'react-table';\nimport {\n  HeadRow,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableStyle,\n  WordsTableContainer,\n} from './WordsTable.styled';\nimport React from 'react';\n\nexport const WordsTable = ({ onClickEditWord, columns }) => {\n  const words = useSelector(selectVisibleWords);\n  // const keyword = useSelector(selectSearchKeyword);\n\n  const data = React.useMemo(\n    () => (words && words.results ? words.results : []),\n    [words]\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <WordsTableContainer>\n      <TableStyle {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <HeadRow {...column.getHeaderProps()} width={column.width}>\n                  {column.render('Header')}\n                </HeadRow>\n              ))}\n            </tr>\n          ))}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <TableRow {...cell.getCellProps()}>\n                    {cell.render('Cell', { word: row.original })}\n                  </TableRow>\n                ))}\n              </tr>\n            );\n          })}\n        </TableBody>\n      </TableStyle>\n    </WordsTableContainer>\n  );\n};\n","import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const PaginationContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 32px;\n  gap: 10px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 28px;\n  }\n`;\n\nexport const ReactPaginateStyle = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  gap: 10px;\n\n  .active {\n    border-radius: 8px;\n    background: ${({ theme }) => theme.green};\n    color: ${({ theme }) => theme.white1};\n  }\n\n  .page-link {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid rgba(18, 20, 23, 0.1);\n    border-radius: 8px;\n    padding: 10px;\n    width: 32px;\n    height: 32px;\n    font-weight: 600;\n    font-size: 13px;\n\n    &:hover {\n      color: ${({ theme }) => theme.green};\n    }\n  }\n`;\n\nexport const PaginateBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid rgba(18, 20, 23, 0.1);\n  border-radius: 8px;\n  padding: 10px;\n  width: 32px;\n  height: 32px;\n  font-weight: 600;\n  font-size: 13px;\n  background: ${({ theme }) => theme.white1};\n\n  &:hover {\n    color: ${({ theme }) => theme.green};\n  }\n  &:active {\n    border-radius: 8px;\n    background: ${({ theme }) => theme.green};\n    color: ${({ theme }) => theme.white1};\n  }\n// `;\n// export const  = styled.`\n  \n// `;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { PaginateBtn, PaginationContainer, ReactPaginateStyle } from './WordsPagination.styled';\nimport { selectWords } from '../../redux/selectors';\n\nexport const WordsPagination = ({ pageCount, handlePageClick }) => {\n  const words = useSelector(selectWords);\n  const currentPage = words.currentPage;\n\n  return (\n    <PaginationContainer>\n      <PaginateBtn onClick={() => handlePageClick(0)} disabled={currentPage === 0}>\n        {'<<'}\n      </PaginateBtn>\n      <ReactPaginateStyle\n        pageCount={pageCount}\n        nextLabel=\">\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={2}\n        marginPagesDisplayed={1}\n        previousLabel=\"<\"\n        breakLabel=\"...\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousLinkClassName=\"page-link\"\n        nextLinkClassName=\"page-link\"\n        breakLinkClassName=\"page-link\"\n\n      />\n      <PaginateBtn\n        onClick={() => handlePageClick(pageCount - 1)}\n        disabled={currentPage === pageCount - 1}\n      >\n        {'>>'}\n      </PaginateBtn>\n    </PaginationContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DictionaryContainer = styled.div`\n  background: ${({ theme }) => theme.white1};\n  padding-top: 32px;\n  padding-left: 32px;\n  padding-right: 32px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n`;\n","import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const AddWordModalContainer = styled.div`\n  position: absolute;\n  width: 342px;\n  max-height: 100vh;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scalex(1);\n  border-radius: 15px;\n  background: ${({ theme }) => theme.green};\n  padding: 48px 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 627px;\n    padding: 48px 64px;\n  }\n`;\n\nexport const BtnClose = styled.svg`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n    top: 20px;\n    right: 20px;\n  }\n`;\n\n// * =========== FORM ===========\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 32px;\n    align-items: center;\n  }\n`;\n\nexport const LabelStyle = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 4.5px;\n  margin-bottom: 4px;\n  font-weight: 500;\n  font-size: 14px;\n  color: ${({ theme }) => theme.white};\n\n  @media screen and (min-width: 768px) {\n    order: 2;\n    margin-bottom: 0;\n    gap: 8px;\n  }\n`;\n\nexport const FlagIcon = styled.svg`\n  width: 28px;\n  height: 28px;\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nexport const FieldStyle = styled(Field)`\n  border: 1px solid #d1d5db;\n  background: ${({ theme }) => theme.green};\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 311px;\n  height: 48px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 11.5;\n  color: ${({ theme }) => theme.white};\n  margin-bottom: 16px;\n\n  :hover {\n    outline: none;\n    border-color: ${({ theme }) => theme.white};\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.white};\n  }\n\n  @media screen and (min-width: 768px) {\n    order: 1;\n    border: 1px solid rgba(252, 252, 252, 0.3);\n    padding: 16px 18px;\n    width: 354px;\n    height: 56px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const ErrMsgStyle = styled(ErrorMessage)`\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 120%;\n  color: ${({ theme }) => theme.white};\n  margin-top: -10px;\n  margin-bottom: 16px;\n`;\n\nexport const ErrMsgCategories = styled(ErrorMessage)`\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 1.2;\n  color: ${({ theme }) => theme.white};\n  margin-top: 10px;\n  margin-bottom: 16px;\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    gap: 10px;\n    margin-top: 32px;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  border: 1px solid rgba(252, 252, 252, 0.4);\n  border-radius: 30px;\n  padding: 12px 45px;\n  width: 159px;\n  height: 48px;\n  background: ${({ theme }) => theme.green};\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.white};\n\n  &:hover {\n    background: ${({ theme }) => theme.white};\n    color: ${({ theme }) => theme.black};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 245px;\n    height: 56px;\n  }\n`;\n// * =========== FORM ===========\n","import toast from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { selectSelectedWord } from '../../redux/selectors';\nimport * as Yup from 'yup';\nimport {\n  AddWordModalContainer,\n  BtnClose,\n  BtnWrapper,\n  ErrMsgStyle,\n  FieldStyle,\n  FlagIcon,\n  FormBtn,\n  FormStyle,\n  FormWrapper,\n  InputWrapper,\n  LabelStyle,\n} from './EditWordModal.styled';\nimport sprite from '../../icons/sprites.svg';\nimport { Formik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport { editWord, fetchOwnWords } from '../../redux/words/operations';\n\nconst validationSchema = Yup.object().shape({\n  en: Yup.string()\n    .matches(/\\b[A-Za-z'-]+(?:\\s+[A-Za-z'-]+)*\\b/, 'Invalid English input')\n    .required('English is required'),\n  ua: Yup.string()\n    .matches(/^(?![A-Za-z])[А-ЯІЄЇҐґа-яієїʼ\\s]+$/u, 'Invalid Ukrainian input')\n    .required('Ukrainian is required'),\n});\n\nexport const EditWordModal = ({ toggleModal }) => {\n  const selectedWord = useSelector(selectSelectedWord);\n  const dispatch = useDispatch();\n\n  const { _id, category } = selectedWord;\n\n  const handleSubmit = values => {\n    let updatedValues = { ...values, category, id:_id};\n    if (category === 'verb') {\n      updatedValues = { ...updatedValues, isIrregular: true };\n    }\n    dispatch(editWord(updatedValues))\n      .unwrap()\n      .then(() => {\n        toast.success('Word updated successfully');\n        dispatch(fetchOwnWords({ page: 1, perPage: 10 }));\n        toggleModal();\n      })\n      .catch(error => {\n        toast.error(error);\n      });\n\n  };\n  \n  \n\n  return (\n    <AddWordModalContainer>\n      <BtnClose onClick={toggleModal} type=\"button\">\n        <svg>\n          <use href={`${sprite}#icon-close`}></use>\n        </svg>\n      </BtnClose>\n\n      <Formik\n        initialValues={{\n          en: selectedWord.en,\n          ua: selectedWord.ua,\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, handleSubmit }) => (\n          <FormStyle>\n            <FormWrapper>\n              <InputWrapper>\n                <LabelStyle htmlFor=\"ua\">\n                  <FlagIcon>\n                    <use href={`${sprite}#icon-ua`}></use>\n                  </FlagIcon>\n                  Ukrainian\n                </LabelStyle>\n                <FieldStyle type=\"text\" name=\"ua\" id=\"ua\" />\n              </InputWrapper>\n              <ErrMsgStyle name=\"ua\" component=\"div\" />\n\n              <InputWrapper>\n                <LabelStyle htmlFor=\"en\">\n                  <FlagIcon>\n                    <use href={`${sprite}#icon-uk`}></use>\n                  </FlagIcon>\n                  English\n                </LabelStyle>\n                <FieldStyle type=\"text\" name=\"en\" id=\"en\" />\n              </InputWrapper>\n              <ErrMsgStyle name=\"en\" component=\"div\" />\n            </FormWrapper>\n\n            <BtnWrapper>\n              <FormBtn type=\"submit\">Save</FormBtn>\n              <FormBtn type=\"button\" onClick={toggleModal}>\n                Cancel\n              </FormBtn>\n            </BtnWrapper>\n          </FormStyle>\n        )}\n      </Formik>\n    </AddWordModalContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PopoverContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ActionsPopoverContainer = styled.div`\n  position: relative;\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 117px;\n  height: 70px;\n  box-shadow: 0 4px 47px 0 rgba(18, 20, 23, 0.08);\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 8px;\n\n    @media screen and (min-width: 768px) {\n        width: 124px;\n        height: 80px;\n    }\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const ActionsBtn = styled.button`\n  background: none;\n  font-weight: 500;\n  font-size: 14px;\n  display: flex;\n    align-items: center;\n    justify-content: center;\n  gap: 8px;\n\n  &:hover {\n    color: ${({ theme }) => theme.black};\n    scale: 1.1;\n  }\n\n   \n\n    @media screen and (min-width: 768px) {\n        font-size: 16px;\n        line-height: 1.5;\n    }\n`;\n\nexport const IconDots = styled.svg`\n  width: 12px;\n  height: 12px;\n  fill: rgba(18, 20, 23, 0.5);\n  &:hover {\n    fill: ${({ theme }) => theme.black};\n  }\n  &:active {\n    fill: ${({ theme }) => theme.black};\n    }\n\n\n    @media screen and (min-width: 768px) {\n        width: 14px;\n        height: 14px;\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: 16px;\n        height: 16px;\n    }\n`;\n","import React, { useState } from 'react';\nimport Popover from 'react-popover';\nimport {\n  ActionsBtn,\n  ActionsPopoverContainer,\n  Icon,\n  IconDots,\n  PopoverContainer,\n} from './ActionsPopover.styled';\nimport sprite from '../../icons/sprites.svg';\nimport { setSelectedWord } from '../../redux/words/wordsSlice';\nimport { useDispatch } from 'react-redux';\nimport { deleteWord, fetchOwnWords } from '../../redux/words/operations';\nimport toast from 'react-hot-toast';\n\n\nexport const ActionsPopover = ({ word, onClickEditWord }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n\n  const handleEditClick = word => {\n    dispatch(setSelectedWord(word));\n    onClickEditWord();\n  };\n\n\n  const handleDeleteClick = (word) => {\n    dispatch(deleteWord(word._id))\n    .unwrap()\n    .then(() => {\n      toast.success('This word was deleted');\n      dispatch(fetchOwnWords({ page: 1, perPage: 10 }));\n    })\n    .catch(error => {\n      toast.error(error);\n    });\n  }\n\n  const togglePopover = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <PopoverContainer>\n      <Popover\n        isOpen={isOpen}\n        body={\n          <ActionsPopoverContainer>\n            <ActionsBtn\n              onClick={() => {\n                handleEditClick(word);\n              }}\n            >\n              <Icon>\n                <use href={`${sprite}#icon-edit`}></use>\n              </Icon>\n              Edit\n            </ActionsBtn>\n            <ActionsBtn onClick={()=> {handleDeleteClick(word)}}>\n              <Icon>\n                <use href={`${sprite}#icon-trash`}></use>\n              </Icon>\n              Delete\n            </ActionsBtn>\n          </ActionsPopoverContainer>\n        }\n        place=\"left\"\n        preferPlace=\"start\"\n        tipSize={0.1}\n        onOuterAction={togglePopover}\n      >\n        <ActionsBtn onClick={togglePopover}>\n          <IconDots>\n            <use href={`${sprite}#icon-dots`}></use>\n          </IconDots>\n        </ActionsBtn>\n      </Popover>\n    </PopoverContainer>\n  );\n};\n","import { Dashboard } from 'components/Dashboard/Dashboard';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { DictionaryContainer } from './DictionaryPage.styled';\nimport { WordsTable } from 'components/WordTable/WordsTable';\nimport { Modal } from 'components/Modal/Modal';\nimport { AddWordModal } from 'components/AddWordModal/AddWordModal';\nimport { EditWordModal } from 'components/EditWordModal/EditWordModal';\nimport sprite from '../../icons/sprites.svg';\nimport { ActionsPopover } from 'components/ActionsPopover/ActionsPopover';\nimport { useDispatch } from 'react-redux';\nimport { fetchOwnWords } from '../../redux/words/operations';\nimport { FlagIcon, IconContainer } from 'components/Layout/Layout.styled';\nimport { WordsPagination } from 'components/WordsPagination/WordsPagination';\nimport { useSelector } from 'react-redux';\nimport { selectWords } from '../../redux/selectors';\nimport { ProgressBar } from 'components/StartTraining/ProgressBar/ProgressBar';\nimport { Text } from 'components/StartTraining/StartTraining.styled';\n\nconst DictionaryPage = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [addWordModal, setAddWordModal] = useState(false);\n  const [editWordModal, setEditWordModal] = useState(false);\n  const dispatch = useDispatch();\n  const words = useSelector(selectWords);\n  console.log(words);\n  const totalPages = words.totalPages;\n\n  const toggleModal = useCallback(() => {\n    setIsOpen(prevState => !prevState);\n  }, [setIsOpen]);\n\n  const onClickAddWord = useCallback(() => {\n    setAddWordModal(true);\n    setEditWordModal(false);\n    toggleModal();\n  }, [setAddWordModal, setEditWordModal, toggleModal]);\n\n  const onClickEditWord = useCallback(() => {\n    setAddWordModal(false);\n    setEditWordModal(true);\n    toggleModal();\n  }, [setAddWordModal, setEditWordModal, toggleModal]);\n\n  const close = () => {\n    setIsOpen(false);\n  };\n\n  const perPage = 7;\n  const handlePageClick = selected => {\n    dispatch(fetchOwnWords({ page: selected + 1, perPage }));\n  };\n\n  const IconUk = ({ text }) => (\n    <IconContainer>\n      <span>{text}</span>\n      <FlagIcon>\n        <use href={`${sprite}#icon-uk`}>z</use>\n      </FlagIcon>\n    </IconContainer>\n  );\n\n  const IconUa = ({ text }) => (\n    <IconContainer>\n      <span>{text}</span>\n      <FlagIcon>\n        <use href={`${sprite}#icon-ua`}>z</use>\n      </FlagIcon>\n    </IconContainer>\n  );\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: () => <IconUk text=\"Word\" />,\n        accessor: 'en',\n        width: 82,\n      },\n      {\n        Header: () => <IconUa text=\"Translation\" />,\n        accessor: 'ua',\n        width: 116,\n      },\n      {\n        Header: 'Progress',\n        accessor: 'progress',\n        Cell: ({ value }) => (\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <span style={{ marginRigth: '5px' }}>{value}%</span>\n            <ProgressBar progress={value} />\n          </div>\n        ),\n        width: 95,\n      },\n      {\n        Header: '',\n        accessor: 'actions',\n        Cell: ({ row }) => (\n          <ActionsPopover\n            word={row.original}\n            onClickEditWord={onClickEditWord}\n          />\n        ),\n        width: 50,\n      },\n    ],\n    [onClickEditWord]\n  );\n\n  useEffect(() => {\n    dispatch(fetchOwnWords({ page: 1, perPage: 10 }));\n  }, [dispatch]);\n\n  return (\n    <DictionaryContainer>\n      <Dashboard onClickAddWord={onClickAddWord} />\n      {words && words.results && words.results.length > 0 ? (\n        <>\n          <WordsTable columns={columns} data={words.data} />\n          <WordsPagination\n            pageCount={totalPages}\n            handlePageClick={({ selected }) => handlePageClick(selected)}\n          />\n        </>\n       ) : (\n        <Text>Please add words at first.</Text>\n      )} \n\n      {isOpen && (\n        <Modal toggleModal={toggleModal}>\n          {addWordModal && (\n            <AddWordModal toggleModal={toggleModal} close={close} />\n          )}\n          {editWordModal && (\n            <EditWordModal toggleModal={toggleModal} close={close} />\n          )}\n        </Modal>\n      )}\n    </DictionaryContainer>\n  );\n};\n\nexport default DictionaryPage;\n"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSearch","_ref","svgRef","title","titleId","props","width","height","fill","xmlns","ref","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","FiltersContainer","styled","_templateObject","_taggedTemplateLiteral","InputWrapper","_templateObject2","SearchInput","_templateObject3","theme","white1","_ref2","black","_ref3","green","_ref4","SearchIcon","SearchSvg","_templateObject4","CategoriesWrapper","selectStyles","input","provided","state","_objectSpread","margin","padding","valueContainer","control","border","borderRadius","background","outline","borderColor","boxShadow","dropdownIndicator","color","cursor","placeholder","fontSize","fontStyle","fontWeight","lineHeight","option","backgroundColor","isFocused","singleValue","RadioBtnWrapper","RadioLabel","RadioInput","Categories","categories","useSelector","selectCategories","selectedCategory","selectSelectedCategory","dispatch","useDispatch","handleVerbTypeChange","event","setVerbType","value","_jsxs","children","_jsx","Select","styles","options","onChange","selectedOption","setCategory","type","name","Filters","_useState","useState","_useState2","_slicedToArray","searchKeyword","setSearchKeyword","useEffect","fetchCategories","debounceTimer","setTimeout","setKeyword","clearTimeout","trim","Dashboard","onClickAddWord","statistics","selectStatistics","getStatistics","DashboardContainer","StatisticsContainer","StatisticsText","totalCount","Wrapper","AddWordButton","onClick","IconSvg","href","concat","sprite","NavLinkStyle","to","WordsTableContainer","TableStyle","TableHead","HeadRow","TableBody","_templateObject5","TableRow","_templateObject6","white","WordsTable","onClickEditWord","columns","words","selectVisibleWords","data","React","results","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","word","original","PaginationContainer","ReactPaginateStyle","ReactPaginate","PaginateBtn","_ref5","_ref6","_ref7","WordsPagination","pageCount","handlePageClick","currentPage","selectWords","disabled","nextLabel","onPageChange","pageRangeDisplayed","marginPagesDisplayed","previousLabel","breakLabel","containerClassName","activeClassName","renderOnZeroPageCount","pageClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","breakLinkClassName","DictionaryContainer","AddWordModalContainer","BtnClose","FormStyle","Form","FormWrapper","LabelStyle","FlagIcon","_templateObject7","FieldStyle","Field","_templateObject8","ErrMsgStyle","ErrorMessage","_templateObject9","BtnWrapper","_templateObject10","_ref8","_templateObject11","FormBtn","_templateObject12","_ref9","_ref10","_ref11","_ref12","validationSchema","Yup","shape","en","matches","required","ua","EditWordModal","toggleModal","selectedWord","selectSelectedWord","_id","category","Formik","initialValues","onSubmit","values","updatedValues","isIrregular","editWord","unwrap","then","toast","fetchOwnWords","page","perPage","catch","error","handleSubmit","htmlFor","component","PopoverContainer","ActionsPopoverContainer","Icon","ActionsBtn","IconDots","ActionsPopover","isOpen","setIsOpen","togglePopover","Popover","body","setSelectedWord","handleEditClick","deleteWord","handleDeleteClick","place","preferPlace","tipSize","onOuterAction","_useState3","_useState4","addWordModal","setAddWordModal","_useState5","_useState6","editWordModal","setEditWordModal","console","log","totalPages","useCallback","prevState","close","IconUk","text","IconContainer","IconUa","Header","accessor","Cell","style","display","alignItems","marginRigth","ProgressBar","progress","_Fragment","selected","Text","Modal","AddWordModal"],"sourceRoot":""}