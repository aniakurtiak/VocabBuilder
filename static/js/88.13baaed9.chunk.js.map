{"version":3,"file":"static/js/88.13baaed9.chunk.js","mappings":"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","sources":["pages/DictionaryPage/DictionaryPage.styled.js","components/WordTable/WordsTable.styled.js","components/ActionsPopover/ActionsPopover.styled.js","components/ActionsPopover/ActionsPopover.jsx","components/WordTable/WordsTable.jsx","pages/DictionaryPage/DictionaryPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DictionaryContainer = styled.div`\n  background: ${({ theme }) => theme.white1};\n  padding-top: 32px;\n  padding-left: 32px;\n  padding-right: 32px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const WordsTableContainer = styled.div`\n  margin-top: 32px;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 15px;\n    padding: 18px;\n    background: #fff;\n    margin-top: 28px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1240px;\n  }\n`;\n\nexport const TableStyle = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`;\n\nexport const TableHead = styled.thead`\n  background: rgba(133, 170, 159, 0.1);\n`;\n\nexport const HeadRow = styled.th`\n  border-bottom: 1px solid #dbdbdb;\n  border-right: 1px solid #dbdbdb;\n  &:last-child {\n    border-right: none;\n    border-radius: 0 8px 0 0;\n  }\n  &:first-child {\n    border-radius: 8px 0 0 0;\n  }\n  font-weight: 500;\n  font-size: 16px;\n  width: ${({ width }) => width}px;\n  padding: 16px 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const TableBody = styled.tbody`\n  box-sizing: border-box;\n`;\n\nexport const TableRow = styled.td`\n  font-size: 14px;\n  border-top: 1px solid #dbdbdb;\n  border-right: 1px solid #dbdbdb;\n  border-left: none;\n  padding: 8px;\n  &:first-child {\n    border-left: none;\n  }\n  &:last-child {\n    border-right: none;\n    padding: 16px 10px 16px 14px;\n    white-space: pre-wrap;\n    background: ${({ theme }) => theme.white};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    font-weight: 500;\n  }\n\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const FlagIcon = styled.svg`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 28px;\n    height: 28px;\n  }\n`;\n\n","import styled from 'styled-components';\n\nexport const PopoverContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ActionsPopoverContainer = styled.div`\n  position: relative;\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 117px;\n  height: 70px;\n  box-shadow: 0 4px 47px 0 rgba(18, 20, 23, 0.08);\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 8px;\n\n    @media screen and (min-width: 768px) {\n        width: 124px;\n        height: 80px;\n    }\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const ActionsBtn = styled.button`\n  background: none;\n  font-weight: 500;\n  font-size: 14px;\n  display: flex;\n    align-items: center;\n    justify-content: center;\n  gap: 8px;\n\n   \n\n    @media screen and (min-width: 768px) {\n        font-size: 16px;\n        line-height: 1.5;\n    }\n`;\n\nexport const IconDots = styled.svg`\n  width: 12px;\n  height: 12px;\n  fill: rgba(18, 20, 23, 0.5);\n  &:hover {\n    fill: ${({ theme }) => theme.black};\n  }\n  &:active {\n    fill: ${({ theme }) => theme.black};\n    }\n\n\n    @media screen and (min-width: 768px) {\n        width: 14px;\n        height: 14px;\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: 16px;\n        height: 16px;\n    }\n`;\n","import React, { useState } from 'react';\nimport Popover from 'react-popover';\nimport {\n  ActionsBtn,\n  ActionsPopoverContainer,\n  Icon,\n  IconDots,\n  PopoverContainer,\n} from './ActionsPopover.styled';\nimport sprite from '../../icons/sprites.svg';\n\nexport const ActionsPopover = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopover = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <PopoverContainer>\n        <Popover\n          isOpen={isOpen}\n          body={\n            <ActionsPopoverContainer>\n              <ActionsBtn>\n                <Icon>\n                  <use href={`${sprite}#icon-edit`}></use>\n                </Icon>\n                Edit\n              </ActionsBtn>\n              <ActionsBtn>\n                <Icon>\n                  <use href={`${sprite}#icon-trash`}></use>\n                </Icon>\n                Delete\n              </ActionsBtn>\n            </ActionsPopoverContainer>\n          }\n          place=\"left\"\n          preferPlace=\"start\"\n          tipSize = {0.1}\n          onOuterAction={togglePopover}\n        >\n          <ActionsBtn onClick={togglePopover}>\n            <IconDots>\n              <use href={`${sprite}#icon-dots`}></use>\n            </IconDots>\n          </ActionsBtn>\n        </Popover>\n    </PopoverContainer>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectWords } from '../../redux/selectors';\nimport { fetchOwnWords } from '../../redux/words/operations';\nimport { useTable } from 'react-table';\nimport {\n  FlagIcon,\n  HeadRow,\n  IconContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableStyle,\n  WordsTableContainer,\n} from './WordsTable.styled';\nimport sprite from '../../icons/sprites.svg';\nimport { ActionsPopover } from 'components/ActionsPopover/ActionsPopover';\n\nexport const WordsTable = () => {\n  const words = useSelector(selectWords);\n  const dispatch = useDispatch();\n\n  const IconUk = ({ text }) => (\n    <IconContainer>\n      <span>{text}</span>\n      <FlagIcon>\n        <use href={`${sprite}#icon-uk`}>z</use>\n      </FlagIcon>\n    </IconContainer>\n  );\n\n  const IconUa = ({ text }) => (\n    <IconContainer>\n      <span>{text}</span>\n      <FlagIcon>\n        <use href={`${sprite}#icon-ua`}>z</use>\n      </FlagIcon>\n    </IconContainer>\n  );\n\n  useEffect(() => {\n    dispatch(fetchOwnWords());\n  }, [dispatch]);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: () => <IconUk text=\"Word\" />,\n        accessor: 'en',\n        width: 82,\n      },\n      {\n        Header: () => <IconUa text=\"Translation\" />,\n        accessor: 'ua',\n        width: 116,\n      },\n      {\n        Header: 'Progress',\n        accessor: 'progress',\n        width: 95,\n      },\n      {\n        Header: '',\n        accessor: 'actions',\n        Cell: () => <ActionsPopover />,\n        width: 50,\n        style: {display: 'flex', justifyContent: 'center', alignItems: 'center'},\n\n      },\n    ],\n    []\n  );\n\n  const data = React.useMemo(() => words || [], [words]);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <WordsTableContainer>\n      <TableStyle {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <HeadRow {...column.getHeaderProps()} width={column.width}>\n                  {column.render('Header')}\n                </HeadRow>\n              ))}\n            </tr>\n          ))}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <TableRow {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </TableRow>\n                ))}\n              </tr>\n            );\n          })}\n        </TableBody>\n      </TableStyle>\n    </WordsTableContainer>\n  );\n};\n","import { Dashboard } from 'components/Dashboard/Dashboard';\nimport React from 'react';\nimport { DictionaryContainer } from './DictionaryPage.styled';\nimport { WordsTable } from 'components/WordTable/WordsTable';\n\nconst DictionaryPage = () => {\n  return (\n    <DictionaryContainer>\n      <Dashboard />\n      <WordsTable />\n    </DictionaryContainer>\n  );\n};\n\nexport default DictionaryPage;\n"],"names":["DictionaryContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","white1","WordsTableContainer","TableStyle","_templateObject2","TableHead","_templateObject3","HeadRow","_templateObject4","width","TableBody","_templateObject5","TableRow","_templateObject6","_ref2","white","IconContainer","_templateObject7","FlagIcon","_templateObject8","PopoverContainer","ActionsPopoverContainer","Icon","ActionsBtn","IconDots","black","ActionsPopover","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","togglePopover","_jsx","children","Popover","body","_jsxs","href","concat","sprite","place","preferPlace","tipSize","onOuterAction","onClick","WordsTable","words","useSelector","selectWords","dispatch","useDispatch","IconUk","text","IconUa","useEffect","fetchOwnWords","columns","React","Header","accessor","Cell","style","display","justifyContent","alignItems","data","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","_objectSpread","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Dashboard"],"sourceRoot":""}