{"version":3,"file":"static/js/110.408ffcc5.chunk.js","mappings":"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","sources":["pages/TrainingPage/TrainingPage/TrainingPage.styled.js","components/StartTraining/StartTraining.jsx","components/TrainingCard/TrainingCard.styled.js","components/TrainingCard/TrainingCard.jsx","components/TrainingRoom/TrainingRoom.styled.js","components/WellDoneModal/WellDoneModal.styled.js","components/WellDoneModal/WellDoneModal.jsx","components/TrainingRoom/TrainingRoom.jsx","pages/TrainingPage/TrainingPage.jsx","../node_modules/@babel/runtime/helpers/esm/extends.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TrainingPageContainer = styled.div`\n  background: ${({ theme }) => theme.white1};\n  padding-top: 24px;\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-bottom: 76px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n\n    padding-top: 62;\n    padding-left: 94px;\n    padding-right: 93px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n`;\n","import React, { useState } from 'react'\nimport reportMob from '../../img/reportMob.png';\nimport repotMob2x from '../../img/reportMob@2x.png';\nimport reportMobWebp from '../../img/reportMob.webp';\nimport reportMob2xWebp from '../../img/reportMob@2x.webp';\nimport report from '../../img/report.png';\nimport report2x from '../../img/report@2x.png';\nimport reportWebp from '../../img/report.webp';\nimport report2xWebp from '../../img/report@2x.webp';\nimport { ContentContainer, LinkStyle, LinkStyle2, NavigateContainer, PictureStyle, StartContainer, Text, Title } from './StartTraining.styled';\nimport { AddWordModal } from 'components/AddWordModal/AddWordModal';\nimport { Modal } from 'components/Modal/Modal';\n\n\nexport const StartTraining = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  return (\n    <StartContainer>\n    <PictureStyle>\n      <source\n        srcSet={`${reportWebp} 1x, ${report2xWebp} 2x`}\n        media=\"(min-width: 768px)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcSet={`${report} 1x, ${report2x} 2x`}\n        media=\"(min-width: 768px)\"\n      />\n      <source\n        srcSet={`${reportMobWebp} 1x, ${reportMob2xWebp} 2x`}\n        media=\"(max-width: 767px)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcSet={`${reportMob} 1x, ${repotMob2x} 2x`}\n        media=\"(max-width: 767px)\"\n      />\n      <img src={reportMobWebp} alt=\"report form\" />\n    </PictureStyle>\n   <ContentContainer>\n      <Title>You don't have a single word to learn right now. </Title>\n      <Text>\n        Please create or add a word to start the workout. We want to improve\n        your vocabulary and develop your knowledge, so please share the words\n        you are interested in adding to your study.\n      </Text>\n      <NavigateContainer>\n        <LinkStyle to = '/dictionary' onClick={toggleModal}>Add word</LinkStyle>\n        <LinkStyle2 to = '/dictionary'>Cancel</LinkStyle2>\n      </NavigateContainer>\n   </ContentContainer>\n\n   {isOpen && (\n        <Modal toggleModal={toggleModal}>\n        <AddWordModal oggleModal={toggleModal}/>\n        </Modal>\n      )}\n  </StartContainer>\n  )\n}\n","import styled from 'styled-components';\n\nexport const TrainingListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 343px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n\n    @media screen and (min-width: 1440px) {\n      flex-direction: row;\n      width: 1024px;\n    }\n  }\n`;\n\nexport const TaskItem = styled.li`\n  border-bottom: 1px solid #dbdbdb;\n  border-radius: 8px 8px 0 0;\n  padding: 22px 22px 18px 22px;\n  width: 100%;\n  height: 195px;\n  background: ${({ theme }) => theme.white};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  &:last-child {\n    border-bottom: none;\n    border-radius: 0 0 8px 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 282px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 302px;\n    border-bottom: none;\n    border-right: 1px solid #dbdbdb;\n    border-radius: 8px 0 0 0;\n  }\n\n  &:last-child {\n    border-right: none;\n  }\n`;\n\nexport const InputStyle = styled.input`\n  border: none;\n  background: none;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    color: ${({ theme }) => theme.black};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const BtnNext = styled.button`\n  background: none;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  color: rgba(18, 20, 23, 0.5);\n\n  &:hover {\n    color: ${({ theme }) => theme.black};\n  }\n`;\n\nexport const WrapforUk = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\n  font-size: 14px;\n  justify-content: flex-end;\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const LanText = styled.p``;\n","import {\n  BtnNext,\n  Container,\n  InputStyle,\n  TaskItem,\n  Text,\n  TrainingListContainer,\n  WrapforUk,\n} from './TrainingCard.styled';\nimport { IconSvg } from 'components/Dashboard/Dashboard.styled';\nimport sprite from '../../icons/sprites.svg';\nimport { FlagIcon } from 'components/AddWordModal/AddWordModal.styled';\n\nexport const TrainingCard = ({\n  task,\n  onNextClick,\n  inputEnValue,\n  setInputEnValue,\n  inputUaValue,\n  setInputUaValue,\n  showNextButton,\n}) => {\n\n  const handleNext = () => {\n    onNextClick(task);\n  };\n\n  return (\n    <TrainingListContainer>\n      <TaskItem>\n        {task.task === 'ua' ? (\n          <Text>{task.en}</Text>\n        ) : (\n          <InputStyle\n            type=\"text\"\n            value={inputEnValue}\n            onChange={e => setInputEnValue(e.target.value)}\n            placeholder=\"Enter translation\"\n          />\n        )}\n        <Container>\n          {task.task === 'en' && showNextButton && (\n            <BtnNext onClick={handleNext}>\n              Next\n              <IconSvg>\n                <use href={`${sprite}#icon-horizontal`}></use>\n              </IconSvg>\n            </BtnNext>\n          )}\n          <WrapforUk>\n            <FlagIcon>\n              <use href={`${sprite}#icon-uk`}></use>\n            </FlagIcon>\n            <p>English</p>\n          </WrapforUk>\n        </Container>\n      </TaskItem>\n\n      <TaskItem>\n          {task.task === 'en' ? (\n            <Text>{task.ua}</Text>\n          ) : (\n            <InputStyle\n              type=\"text\"\n              value={inputUaValue}\n              onChange={e => setInputUaValue(e.target.value)}\n              placeholder=\"Введіть переклад\"\n            />\n          )}\n        <Container>\n        {task.task === 'ua' && showNextButton && (\n          <BtnNext onClick={handleNext}>\n            Next\n            <IconSvg>\n              <use href={`${sprite}#icon-horizontal`}></use>\n            </IconSvg>\n          </BtnNext>\n        )}\n          <WrapforUk>\n            <FlagIcon>\n              <use href={`${sprite}#icon-ua`}></use>\n            </FlagIcon>\n            <p>Ukrainian</p>\n          </WrapforUk>\n        </Container>\n      </TaskItem>\n    </TrainingListContainer>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const TrainingListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 343px;\n`;\n\nexport const TaskItem = styled.li`\n  border-bottom: 1px solid #dbdbdb;\n  border-radius: 8px 8px 0 0;\n  padding: 22px 22px 18px 22px;\n  width: 100%;\n  height: 195px;\n  background: ${({ theme }) => theme.white};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  &:last-child {\n    border-bottom: none;\n    border-radius: 0 0 8px 8px;\n  }\n`;\n\nexport const InputStyle = styled.input`\n    border: none;\n    background: none;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.5;\n    width: 100%;\n\n    &:focus {\n        outline: none;\n\n    }\n\n    &::placeholder {\n        color: ${({ theme }) => theme.black};\n\n    }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\nfont-size: 14px;\n`;\n\nexport const BtnNext = styled.button`\n    background: none;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\nfont-size: 16px;\nline-height: 1.5;\ncolor: rgba(18, 20, 23, 0.5);\n\n    &:hover {\n        color: ${({ theme }) => theme.black};\n    }\n`;\n\nexport const WrapforUk = styled.div`\n   display: flex;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\nfont-size: 14px;\njustify-content: flex-end;\n`;\n\nexport const BtnContainer = styled.div`\nmargin-top: 116px;\n   display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    flex-direction: row;\n    align-items: center;\n    justify-content: start;\n    gap: 10px;\n    margin-bottom: 151px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 80px;\n  }\n  `;\n\n  export const BtnSave = styled.button`\n  background: ${({ theme }) => theme.green};\n  color: ${({ theme }) => theme.white};\n  border-radius: 30px;\n  padding: 16px;\n  width: 343px;\n  height: 56px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  text-align: center;\n\n  &:hover {\n    background: #a5c0b8;\n    color: ${({ theme }) => theme.white};\n  }\n\n@media screen and (min-width: 768px) {\n    width: 203px;\n}\n\n    @media screen and (min-width: 1440px) {\npadding: 14px;\nwidth: 215px;\n    }\n`;\n\nexport const LinkCancel = styled(Link)`\n  font-weight: 700;\n  font-size: 16px;\n  color: rgba(18, 20, 23, 0.5);\n  text-align: center;\n  background: none;\n\n  &:hover {\n    color: ${({ theme }) => theme.black};\n  }\n\n  @media screen and (min-width: 768px) {\n    border: 1px solid ${({ theme }) => theme.green};\n    border-radius: 30px;\n    padding: 14px;\n    width: 203px;\n    height: 56px;\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 1.56;\n    color: ${({ theme }) => theme.green};\n\n    &:hover {\n      background: ${({ theme }) => theme.green};\n      color: ${({ theme }) => theme.white};\n    }\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  position: relative;\n  width: 25px;\n  height: 30px;\n  margin-left: 299px;\n\n  @media screen and (min-width: 768px) {\n    margin-left: 646px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-left: 999px;\n  }\n`;\n\nexport const ProgressNumber = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;","import styled from 'styled-components';\n\nexport const WellDoneContainer = styled.div`\n  position: absolute;\n  width: 342px;\n  max-height: 100vh;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scalex(1);\n  border-radius: 15px;\n  background: ${({ theme }) => theme.green};\n  padding: 48px 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 527px;\n    padding: 48px 64px;\n  }\n`;\n\nexport const BtnClose = styled.svg`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n    top: 20px;\n    right: 20px;\n  }\n`;\n\nexport const Title = styled.h2`\nfont-weight: 600;\nfont-size: 24px;\nline-height: 1.17;\nletter-spacing: -0.02em;\ntext-align: center;\ncolor: ${({ theme }) => theme.white};\nmargin-bottom: 28px;\n\n@media screen and (min-width: 768px) {\n  font-size: 40px;\nline-height: 1.2;\n\n}\n`;\n\nexport const PictureStyle = styled.picture`\ndisplay: flex;\njustify-content: end;\n`;\n\nexport const ColumnsWrapper = styled.div`\ndisplay: flex;\ngap: 32px;\nmargin-bottom: 24px;\n\n@media screen and (min-width: 768px) {\n  gap: 64px;\n}\n`;\n\nexport const ColumnsTitle = styled.h3`\nfont-weight: 400;\nfont-size: 14px;\nline-height: 1.5;\ncolor: rgba(252, 252, 252, 0.5);\nmargin-bottom: 8px;\n\n@media screen and (min-width: 768px) {\n  font-size: 16px;\n} \n`;\n\nexport const WordsContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 4px;\nfont-weight: 500;\nfont-size: 16px;\nline-height: 150%;\ncolor: ${({ theme }) => theme.white};\n\n@media screen and (min-width: 768px) {\n  font-size: 20px;\n}\n`;","import React from 'react';\nimport {\n  BtnClose,\n  ColumnsTitle,\n  ColumnsWrapper,\n  PictureStyle,\n  Title,\n  WellDoneContainer,\n  WordsContainer,\n} from './WellDoneModal.styled';\nimport sprite from '../../icons/sprites.svg';\nimport bookMob from '../../img/bookMob.png';\nimport bookMob2x from '../../img/bookMob@2x.png';\nimport bookMobWeb from '../../img/bookMob.webp';\nimport bookMob2xWeb from '../../img/bookMob@2x.webp';\nimport book from '../../img/book.png';\nimport book2x from '../../img/book @2x.png';\nimport bookWeb from '../../img/book.webp';\nimport book2xWeb from '../../img/book @2x.webp';\nimport { useSelector } from 'react-redux';\nimport { selectCheckedAnswers } from '../../redux/selectors';\n\nexport const WellDoneModal = ({ toggleModal }) => {\n  const checkAnswers = useSelector(selectCheckedAnswers);\n\n  const mistakes = checkAnswers.filter(answer => !answer.isDone);\n  const correctAnswers = checkAnswers.filter(answer => answer.isDone);\n\n  return (\n    <WellDoneContainer>\n      <BtnClose onClick={toggleModal} type=\"button\">\n        <svg>\n          <use href={`${sprite}#icon-close`}></use>\n        </svg>\n      </BtnClose>\n      <Title>Well Done!</Title>\n      <ColumnsWrapper>\n        <WordsContainer>\n          <ColumnsTitle>Correct answers:</ColumnsTitle>\n          {correctAnswers.map((answer, index) => (\n            <p key={index}>{answer.en}</p>\n          ))}\n        </WordsContainer>\n        <WordsContainer>\n          <ColumnsTitle>Mistakes:</ColumnsTitle>\n          {mistakes.map((answer, index) => (\n            <p key={index}>{answer.en}</p>\n          ))}\n        </WordsContainer>\n      </ColumnsWrapper>\n      <PictureStyle>\n        <source\n          srcSet={`${bookWeb} 1x, ${book2xWeb} 2x`}\n          media=\"(min-width: 768px)\"\n          type=\"image/webp\"\n        />\n        <source\n          srcSet={`${book} 1x, ${book2x} 2x`}\n          media=\"(min-width: 768px)\"\n        />\n        <source\n          srcSet={`${bookMobWeb} 1x, ${bookMob2xWeb} 2x`}\n          media=\"(max-width: 767px)\"\n          type=\"image/webp\"\n        />\n        <source\n          srcSet={`${bookMob} 1x, ${bookMob2x} 2x`}\n          media=\"(max-width: 767px)\"\n        />\n        <img src={bookMobWeb} alt=\"report form\" />\n      </PictureStyle>\n    </WellDoneContainer>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectAnswers, selectStatistics, selectTasks } from '../../redux/selectors';\nimport { TrainingCard } from 'components/TrainingCard/TrainingCard';\nimport {\n  BtnContainer,\n  BtnSave,\n  LinkCancel,\n  ProgressContainer,\n  ProgressNumber,\n} from './TrainingRoom.styled';\nimport { setAnswers, setCheckedAnswers } from '../../redux/words/wordsSlice';\nimport { sendAnswers } from '../../redux/words/operations';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { Modal } from 'components/Modal/Modal';\nimport { WellDoneModal } from 'components/WellDoneModal/WellDoneModal';\nimport { ProgressBar } from 'components/StartTraining/ProgressBar/ProgressBar';\n\nexport const TrainingRoom = () => {\n  const tasks = useSelector(selectTasks);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [inputEnValues, setInputEnValues] = useState({});\n  const [inputUaValues, setInputUaValues] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n  \n  const dispatch = useDispatch();\n  const answers = useSelector(selectAnswers);\n  const navigate = useNavigate();\n  const statistics = useSelector(selectStatistics);\n\n\n  const toggleModal = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  const handleEnInput = task => {\n    const inputEnValue = inputEnValues[task._id] || '';\n    if (inputEnValue.trim() !== '') {\n      const answerCard = {\n        _id: task._id,\n        en: inputEnValue,\n        ua: task.ua,\n        task: task.task,\n      };\n      dispatch(setAnswers([...answers, answerCard]));\n      setInputEnValues(prevInputValues => {\n        return { ...prevInputValues, [task._id]: '' };\n      });\n    }\n  };\n\n  const handleUaInput = task => {\n    const inputUaValue = inputUaValues[task._id] || '';\n    if (inputUaValue.trim() !== '') {\n      const answerCard = {\n        _id: task._id,\n        en: task.en,\n        ua: inputUaValue,\n        task: task.task,\n      };\n      dispatch(setAnswers([...answers, answerCard]));\n      setInputEnValues(prevInputValues => {\n        return { ...prevInputValues, [task._id]: '' };\n      });\n    }\n  };\n\n  const handleNextClick = task => {\n    handleEnInput(task);\n    handleUaInput(task);\n    if (currentCardIndex < tasks.tasks.length - 1) {\n      setCurrentCardIndex(prevIndex => prevIndex + 1);\n    }\n  };\n\n  const handleSave = task => {\n    handleNextClick(task);\n    dispatch(sendAnswers(answers))\n      .unwrap()\n      .then(data => {\n        dispatch(setCheckedAnswers(data));\n        toggleModal();\n      })\n      .catch(error => {\n        toast.error('Something went wrong. Your progress will not be saved!');\n        navigate('/dictionary');\n      });\n  };\n\nconst tasksCount = statistics.totalCount*2;\n\n  return (\n    <div>\n        {statistics.totalCount > 0 && (\n        <ProgressContainer>\n          <ProgressBar progress={tasksCount} />\n          <ProgressNumber>{tasksCount}</ProgressNumber>\n        </ProgressContainer>\n      )}\n      {tasks.tasks && tasks.tasks[currentCardIndex] && (\n        <TrainingCard\n          task={tasks.tasks[currentCardIndex]}\n          onNextClick={handleNextClick}\n          inputEnValue={inputEnValues[tasks.tasks[currentCardIndex]._id] || ''}\n          setInputEnValue={value =>\n            setInputEnValues({\n              ...inputEnValues,\n              [tasks.tasks[currentCardIndex]._id]: value,\n            })\n          }\n          inputUaValue={inputUaValues[tasks.tasks[currentCardIndex]._id] || ''}\n          setInputUaValue={value =>\n            setInputUaValues({\n              ...inputUaValues,\n              [tasks.tasks[currentCardIndex]._id]: value,\n            })\n          }\n          showNextButton={currentCardIndex < tasks.tasks.length - 1}\n        />\n      )}\n\n      <BtnContainer>\n        <BtnSave type=\"submit\" onClick={handleSave}>\n          Save\n        </BtnSave>\n        <LinkCancel to=\"/dictionary\">Cancel</LinkCancel>\n      </BtnContainer>\n       {/* )}  */}\n\n      {isOpen && (\n        <Modal toggleModal={toggleModal}>\n          <WellDoneModal toggleModal={toggleModal} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TrainingPageContainer } from './TrainingPage/TrainingPage.styled';\nimport { StartTraining } from '../../components/StartTraining/StartTraining';\nimport { fetchTasks } from '../../redux/words/operations';\nimport { selectStatistics } from '../../redux/selectors';\nimport { TrainingRoom } from 'components/TrainingRoom/TrainingRoom';\n\nconst TrainingPage = () => {\n  const dispatch = useDispatch();\nconst statistics = useSelector(selectStatistics);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n\n  return (\n    <TrainingPageContainer>\n      {statistics.totalCount ? <TrainingRoom /> :  <StartTraining />}\n    </TrainingPageContainer>\n  );\n};\n\nexport default TrainingPage;\n\n\n\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}"],"names":["TrainingPageContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","white1","StartTraining","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","toggleModal","prevState","_jsxs","StartContainer","children","PictureStyle","_jsx","srcSet","concat","reportWebp","report2xWebp","media","type","report","report2x","reportMobWebp","reportMob2xWebp","reportMob","repotMob2x","src","alt","ContentContainer","Title","Text","NavigateContainer","LinkStyle","to","onClick","LinkStyle2","Modal","AddWordModal","oggleModal","TrainingListContainer","TaskItem","_templateObject2","white","InputStyle","_templateObject3","_ref2","black","Container","_templateObject4","BtnNext","_templateObject5","_templateObject6","_ref3","WrapforUk","_templateObject7","_templateObject8","_templateObject9","TrainingCard","task","onNextClick","inputEnValue","setInputEnValue","inputUaValue","setInputUaValue","showNextButton","handleNext","en","value","onChange","e","target","placeholder","IconSvg","href","sprite","FlagIcon","ua","BtnContainer","BtnSave","_ref4","green","_ref5","_ref6","LinkCancel","Link","_templateObject10","_ref7","_ref8","_ref9","_ref10","_ref11","ProgressContainer","_templateObject11","ProgressNumber","_templateObject12","WellDoneContainer","BtnClose","ColumnsWrapper","ColumnsTitle","WordsContainer","WellDoneModal","checkAnswers","useSelector","selectCheckedAnswers","mistakes","filter","answer","isDone","correctAnswers","map","index","bookWeb","book2xWeb","book","book2x","bookMobWeb","bookMob2xWeb","bookMob","bookMob2x","TrainingRoom","tasks","selectTasks","currentCardIndex","setCurrentCardIndex","_useState3","_useState4","inputEnValues","setInputEnValues","_useState5","_useState6","inputUaValues","setInputUaValues","_useState7","_useState8","dispatch","useDispatch","answers","selectAnswers","navigate","useNavigate","statistics","selectStatistics","handleNextClick","_id","trim","answerCard","setAnswers","_toConsumableArray","prevInputValues","_objectSpread","_defineProperty","handleEnInput","handleUaInput","length","prevIndex","tasksCount","totalCount","ProgressBar","progress","sendAnswers","unwrap","then","data","setCheckedAnswers","catch","error","toast","useEffect","fetchTasks","_extends","Object","assign","bind","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this"],"sourceRoot":""}