{"version":3,"file":"static/js/192.7724c74b.chunk.js","mappings":"+NAEaA,EAAsBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mRAC7B,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,MAAM,I,kDCD9BC,EAAsBN,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+FAOhCK,EAAaP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8EAMzBO,EAAYT,EAAAA,GAAAA,MAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,0FAQxBS,EAAUX,EAAAA,GAAAA,GAASY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,oEAMnBW,EAAYb,EAAAA,GAAAA,MAAYc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,4FAGvB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBW,KAAK,IAI3BC,EAAWhB,EAAAA,GAAAA,GAASiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,iC,SC7BpBgB,EAAa,WACtB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACNF,GAASG,EAAAA,EAAAA,KACb,GAAG,CAACH,IAEJ,IAAMI,EAAUC,EAAAA,SACZ,iBAAM,CACF,CACIC,OAAQ,OACRC,SAAU,MAEd,CACID,OAAQ,cACRC,SAAU,MAEd,CACID,OAAQ,WACRC,SAAU,YAMjB,GACD,IAGEC,EAAOH,EAAAA,SAAc,kBAAMR,GAAS,EAAE,GAAE,CAACA,IAE/CY,GAMIC,EAAAA,EAAAA,UAAS,CAAEN,QAAAA,EAASI,KAAAA,IALpBG,EAAaF,EAAbE,cACAC,EAAiBH,EAAjBG,kBACAC,EAAYJ,EAAZI,aACAC,EAAIL,EAAJK,KACAC,EAAUN,EAAVM,WAGJ,OACIC,EAAAA,EAAAA,KAAChC,EAAmB,CAAAiC,UAChBC,EAAAA,EAAAA,MAACjC,GAAUkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKR,KAAe,IAAAM,SAAA,EAC3BD,EAAAA,EAAAA,KAAC7B,EAAS,CAAA8B,SACLJ,EAAaO,KAAI,SAAAC,GAAW,OACzBL,EAAAA,EAAAA,KAAA,MAAAG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQE,EAAYC,uBAAqB,IAAAL,SACpCI,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC3BR,EAAAA,EAAAA,KAAC3B,GAAO8B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKK,EAAOC,kBAAgB,IAAAR,SAAGO,EAAOE,OAAO,YAAoB,MAE5E,OAGbV,EAAAA,EAAAA,KAACzB,GAAS4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKP,KAAmB,IAAAK,SAC7BH,EAAKM,KAAI,SAAAO,GAEN,OADAZ,EAAWY,IAEPX,EAAAA,EAAAA,KAAA,MAAAG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQQ,EAAIC,eAAa,IAAAX,SACpBU,EAAIE,MAAMT,KAAI,SAAAU,GAAI,OACfd,EAAAA,EAAAA,KAACtB,GAAQyB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKW,EAAKC,gBAAc,IAAAd,SAAGa,EAAKJ,OAAO,UAAmB,MAInF,YAKpB,EC5DA,EATuB,WACrB,OACER,EAAAA,EAAAA,MAACzC,EAAmB,CAAAwC,SAAA,EAClBD,EAAAA,EAAAA,KAACgB,EAAAA,EAAS,KACVhB,EAAAA,EAAAA,KAACpB,EAAU,MAGjB,C","sources":["pages/DictionaryPage/DictionaryPage.styled.js","components/WordTable/WordsTable.styled.js","components/WordTable/WordsTable.jsx","pages/DictionaryPage/DictionaryPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DictionaryContainer = styled.div`\n  background: ${({ theme }) => theme.white1};\n  padding-top: 32px;\n  padding-left: 32px;\n  padding-right: 32px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const WordsTableContainer = styled.div`\n  margin-top: 32px;\n  width: 343px;\n  margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const TableStyle = styled.table`\n   border: 1px solid #dbdbdb;\n  border-radius: 8px;\nwidth: 100%;\n`;\n\nexport const TableHead = styled.thead`\nbackground: rgba(133, 170, 159, 0.1);\nfont-weight: 500;\nfont-size: 16px;\n\n\n`;\n\nexport const HeadRow = styled.th`\nfont-weight: 500;\nfont-size: 16px;\npadding: 16px 14px;\n`;\n\nexport const TableBody = styled.tbody`\nfont-weight: 500;\nfont-size: 14px;\nbackground: ${({ theme }) => theme.white};\n/* padding: 16px 14px; */\n`;\n\nexport const TableRow = styled.td`\npadding: 16px 14px;\n\n`;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectWords } from '../../redux/selectors';\nimport { fetchOwnWords } from '../../redux/words/operations';\nimport { useTable } from 'react-table';\nimport { HeadRow, TableBody, TableHead, TableRow, TableStyle, WordsTableContainer } from './WordsTable.styled';\n\nexport const WordsTable = () => {\n    const words = useSelector(selectWords);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchOwnWords());\n    }, [dispatch]);\n\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: 'Word',\n                accessor: 'en',\n            },\n            {\n                Header: 'Translation',\n                accessor: 'ua',\n            },\n            {\n                Header: 'Progress',\n                accessor: 'progress',\n            },\n            // {\n            //     Header: '',\n            //     accessor: 'progress',\n            // },\n        ],\n        []\n    );\n\n    const data = React.useMemo(() => words || [], [words]);\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({ columns, data });\n\n    return (\n        <WordsTableContainer>\n            <TableStyle {...getTableProps()}>\n                <TableHead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <HeadRow {...column.getHeaderProps()}>{column.render('Header')}</HeadRow>\n                            ))}\n                        </tr>\n                    ))}\n                </TableHead>\n                <TableBody {...getTableBodyProps()}>\n                    {rows.map(row => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map(cell => (\n                                    <TableRow {...cell.getCellProps()}>{cell.render('Cell')}</TableRow>\n                                ))}\n                            </tr>\n                        );\n                    })}\n                </TableBody>\n            </TableStyle>\n        </WordsTableContainer>\n    );\n};\n","import { Dashboard } from 'components/Dashboard/Dashboard';\nimport React from 'react';\nimport { DictionaryContainer } from './DictionaryPage.styled';\nimport { WordsTable } from 'components/WordTable/WordsTable';\n\nconst DictionaryPage = () => {\n  return (\n    <DictionaryContainer>\n      <Dashboard />\n      <WordsTable />\n    </DictionaryContainer>\n  );\n};\n\nexport default DictionaryPage;\n"],"names":["DictionaryContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","white1","WordsTableContainer","TableStyle","_templateObject2","TableHead","_templateObject3","HeadRow","_templateObject4","TableBody","_templateObject5","white","TableRow","_templateObject6","WordsTable","words","useSelector","selectWords","dispatch","useDispatch","useEffect","fetchOwnWords","columns","React","Header","accessor","data","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","_jsx","children","_jsxs","_objectSpread","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Dashboard"],"sourceRoot":""}