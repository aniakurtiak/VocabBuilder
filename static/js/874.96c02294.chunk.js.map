{"version":3,"file":"static/js/874.96c02294.chunk.js","mappings":"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","sources":["pages/RegisterPage/RegisterPage.styled.js","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { ErrorMessage, Field, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Image = styled.img`\n  margin-top: 12px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: block;\n  }\n`;\n\nexport const AuthContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 25px 25px 0 0;\n  background-color: rgba(133, 170, 159, 0.1);\n  margin-top: 8px;\n  padding-bottom: 57px;\n  padding-left: 16px;\n  padding-right: 16px;\n  gap: 16px;\n\n\n  @media screen and (min-width: 768px) {\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n`;\n\nexport const AuthTitle = styled.h2`\n  font-weight: 600;\n  font-size: 30px;\n  line-height: 1.07;\n  letter-spacing: -0.02em;\n  margin-top: 32px;\n`;\n\nexport const AuthText = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: rgba(18, 20, 23, 0.8);\n`;\n\nexport const FormStyle = styled(Form)`\n  /* width: 100%; */\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const FieldStyle = styled(Field)`\n  border: 1px solid rgba(18, 20, 23, 0.1);\n  border-radius: 15px;\n  padding: 16px 18px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  width: 100%;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.black};\n  }\n\n  &:hover {\n    outline: none;\n    border-color: ${({ theme }) => theme.green};\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.green};\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: 0.01em;\n  color: #d80027;\n  margin-top: -10px;\n`;\n\nexport const StatusText = styled.div`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: 0.01em;\n  color: #3cbf61;\n  margin-top: -10px;\n`;\n\nexport const BtnSubmit = styled.button`\n  border-radius: 30px;\n  padding: 16px 139px;\n  width: 343px;\n  height: 56px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.white};\n  background: ${({ theme }) => theme.green};\n  margin-top: 18px;\n\n  &:hover {\n  background: #a5c0b8;\n}\n`;\n\nexport const LinkStyle = styled(Link)`\nfont-weight: 700;\nfont-size: 16px;\nline-height: 1.5;\ntext-decoration: underline;\ntext-decoration-skip-ink: none;\ncolor: rgba(18, 20, 23, 0.5);\ntext-align: center;\n\n&:hover {\n    color: ${({ theme }) => theme.black};\n  }\n`;","import React from 'react';\nimport * as Yup from 'yup';\nimport illustrationMob from '../../img/illustrationMob.png';\nimport illustrationMob2x from '../../img/illustrationMob@2x.png';\nimport illustrationDesktop from '../../img/illustrationDesktop.png';\nimport illustrationDesktop2x from '../../img/illustrationDesktop@2x.png';\nimport illustrationMobWebp from '../../img//illustrationMob.webp';\nimport illustrationMob2xWebp from '../../img/illustrationMob@2x.webp';\nimport illustrationDesktopWebp from '../../img/illustrationDesktop.webp';\nimport illustrationDesktop2xWebp from '../../img/illustrationDesktop@2x.webp';\nimport {\n  AuthContainer,\n  AuthText,\n  AuthTitle,\n  BtnSubmit,\n  ErrMsg,\n  FieldStyle,\n  FormStyle,\n  Image,\n  LinkStyle,\n  StatusText,\n} from './RegisterPage.styled';\nimport { Formik } from 'formik';\n\nconst RegisterPage = () => {\n  const RegisterSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, 'Too Short!')\n      .max(20, 'Too Long!')\n      .required('Required')\n      .matches(/^[\\p{L}\\s]+$/u, 'Name must contain only letters and spaces'),\n    email: Yup.string()\n      .matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email')\n      .required('Required'),\n    password: Yup.string()\n      .matches(/^(?=.*[a-zA-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/, 'Error password')\n      .required('Required'),\n  });\n\n  return (\n    <div>\n      <picture>\n        <source\n          srcSet={`${illustrationDesktopWebp} 1x, ${illustrationDesktop2xWebp} 2x`}\n          media=\"(min-width: 1440px)\"\n          type=\"image/webp\"\n        />\n        <source\n          srcSet={`${illustrationDesktop} 1x, ${illustrationDesktop2x} 2x`}\n          media=\"(min-width: 1440px)\"\n        />\n        <source\n          srcSet={`${illustrationMobWebp} 1x, ${illustrationMob2xWebp} 2x`}\n          media=\"(max-width: 767px)\"\n          type=\"image/webp\"\n        />\n        <source\n          srcSet={`${illustrationMob} 1x, ${illustrationMob2x} 2x`}\n          media=\"(max-width: 767px)\"\n        />\n        <Image src={illustrationMobWebp} alt=\"people reading dictionary\" />\n      </picture>\n\n      <AuthContainer>\n        <AuthTitle>Register</AuthTitle>\n        <AuthText>\n          To start using our services, please fill out the registration form\n          below. All fields are mandatory:\n        </AuthText>\n\n        <Formik\n          initialValues={{\n            name: '',\n            email: '',\n            password: '',\n          }}\n          onSubmit={(values, { setStatus }) => {\n            setStatus({ successPassword: 'Success password' }); // Встановлення статусу успіху для пароля\n            // Отримання інших дій, наприклад, відправка даних на сервер або виконання інших дій після успішної валідації\n          }}\n          validationSchema={RegisterSchema}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, status }) => (\n            <FormStyle>\n              <FieldStyle name=\"name\" placeholder=\"Name\" />\n              <ErrMsg name=\"name\" component=\"div\" />\n              <FieldStyle type=\"email\" name=\"email\" placeholder=\"Email\" />\n              <ErrMsg name=\"email\" component=\"div\" />\n              <FieldStyle\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n              />\n              <ErrMsg name=\"password\" component=\"div\" />\n              {status && status.successPassword && (\n                <StatusText>{status.successPassword}</StatusText> // Відображення повідомлення про успіх, якщо воно є в статусі\n              )}\n              <BtnSubmit type=\"submit\">Register</BtnSubmit>\n            </FormStyle>\n          )}\n        </Formik>\n        <LinkStyle to=\"/login\">Login</LinkStyle>\n      </AuthContainer>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Image","styled","_templateObject","_taggedTemplateLiteral","AuthContainer","_templateObject2","AuthTitle","_templateObject3","AuthText","_templateObject4","FormStyle","Form","_templateObject5","FieldStyle","Field","_templateObject6","_ref","theme","black","_ref2","green","_ref3","ErrMsg","ErrorMessage","_templateObject7","StatusText","_templateObject8","BtnSubmit","_templateObject9","_ref4","white","_ref5","LinkStyle","Link","_templateObject10","_ref6","RegisterSchema","Yup","shape","name","min","max","required","matches","email","password","_jsxs","children","_jsx","srcSet","concat","illustrationDesktopWebp","illustrationDesktop2xWebp","media","type","illustrationDesktop","illustrationDesktop2x","illustrationMobWebp","illustrationMob2xWebp","illustrationMob","illustrationMob2x","src","alt","Formik","initialValues","onSubmit","values","setStatus","successPassword","validationSchema","errors","touched","handleChange","handleBlur","status","placeholder","component","to"],"sourceRoot":""}