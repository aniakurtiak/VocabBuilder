{"version":3,"file":"static/js/185.dd78ff23.chunk.js","mappings":"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","sources":["components/AddWordModal/AddWordModal.jsx","components/AddWordModal/AddWordModal.styled.js","components/Dashboard/Dashboard.styled.js","pages/TrainingPage/TrainingPage/TrainingPage.styled.js","components/StartTraining/StartTraining.styled.js","components/StartTraining/StartTraining.jsx","components/TrainingCard/TrainingCard.styled.js","components/TrainingCard/TrainingCard.jsx","components/TrainingRoom/TrainingRoom.styled.js","components/WellDoneModal/WellDoneModal.styled.js","components/WellDoneModal/WellDoneModal.jsx","components/TrainingRoom/TrainingRoom.jsx","pages/TrainingPage/TrainingPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  AddWordModalContainer,\n  BtnClose,\n  BtnWrapper,\n  CategoriesWrapper,\n  ErrMsgCategories,\n  ErrMsgStyle,\n  FieldStyle,\n  FlagIcon,\n  FormBtn,\n  FormStyle,\n  FormWrapper,\n  InputWrapper,\n  LabelStyle,\n  ModalTitle,\n  ModaltText,\n  Option,\n  RadioBtnWrapper,\n  RadioInput,\n  RadioLabel,\n  StyledSelect,\n} from './AddWordModal.styled';\nimport sprite from '../../icons/sprites.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  selectCategories, selectWordsError,\n} from '../../redux/selectors';\nimport { addWord, fetchOwnWords } from '../../redux/words/operations';\nimport toast from 'react-hot-toast';\n\n\nconst validationSchema = Yup.object().shape({\n  category: Yup.string().required('Category is required'),\n  verbType: Yup.string().when('category', {\n    is: 'verb',\n    then: Yup.string().required('Verb type is required'),\n  }),\n  en: Yup.string()\n    .matches(/\\b[A-Za-z'-]+(?:\\s+[A-Za-z'-]+)*\\b/, 'Invalid English input')\n    .required('English is required'),\n  ua: Yup.string()\n    .matches(/^(?![A-Za-z])[А-ЯІЄЇҐґа-яієїʼ\\s]+$/u, 'Invalid Ukrainian input')\n    .required('Ukrainian is required'),\n});\n\nexport const AddWordModal = ({ toggleModal, close }) => {\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const error = useSelector(selectWordsError);\n  const [verbType, setVerbType] = useState('');\n\n  const handleSubmit = values => {\n    const dataToSend = { ...values };\n    if (values.category === 'verb') {\n      dataToSend.isIrregular = verbType === 'irregular';\n    } \n    dispatch(addWord(dataToSend))\n    .unwrap()\n      .then(() => {\n        dispatch(fetchOwnWords({ page: 1, perPage: 10 }));\n        toggleModal()\n      })\n      .catch(error => {\n        toast.error(error); \n      });\n  };\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  return (\n    <AddWordModalContainer>\n      <BtnClose onClick={toggleModal} type=\"button\">\n        <svg>\n          <use href={`${sprite}#icon-close`}></use>\n        </svg>\n      </BtnClose>\n      <ModalTitle>Add word</ModalTitle>\n      <ModaltText>\n        Adding a new word to the dictionary is an important step in enriching\n        the language base and expanding the vocabulary.\n      </ModaltText>\n\n      <Formik\n        initialValues={{\n          en: '',\n          ua: '',\n          category: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue }) => (\n          <FormStyle>\n            <CategoriesWrapper>\n            <Field as={StyledSelect} name=\"category\" id=\"category\">\n                <option value=\"\">Categories</option>\n                {categories &&\n                  categories.map(category => (\n                    <Option key={category.value} value={category.value}>\n                      {category.value}\n                    </Option>\n                  ))}\n              </Field>\n              <ErrMsgCategories name=\"category\" component=\"div\" />\n\n              {values.category === 'Verb' && (\n                <RadioBtnWrapper>\n                  <RadioLabel>\n                  <RadioInput\n                      type=\"radio\"\n                      name=\"verbType\"\n                      value=\"regular\"\n                      checked={verbType === 'regular'}\n                      onChange={() => {\n                        setVerbType('regular');\n                        setFieldValue('isIrregular', false);\n                      }}\n                    />\n                    Regular\n                  </RadioLabel>\n                  <RadioLabel>\n                    <RadioInput\n                      type=\"radio\"\n                      name=\"verbType\"\n                      value=\"irregular\"\n                      checked={verbType === 'irregular'}\n                      onChange={() => {\n                        setVerbType('irregular');\n                        setFieldValue('isIrregular', true);\n                      }}\n                    />\n                    Irregular\n                  </RadioLabel>\n                  <ErrorMessage name=\"verbType\" component=\"div\" />\n                </RadioBtnWrapper>\n              )}\n            </CategoriesWrapper>\n\n            <FormWrapper>\n            <InputWrapper>\n              <LabelStyle htmlFor=\"ua\">\n                <FlagIcon>\n                  <use href={`${sprite}#icon-ua`}></use>\n                </FlagIcon>\n                Ukrainian\n              </LabelStyle>\n                <FieldStyle type=\"text\" name=\"ua\" id=\"ua\" />\n            </InputWrapper>\n                <ErrMsgStyle name=\"ua\" component=\"div\" />\n  \n           <InputWrapper>\n              <LabelStyle htmlFor=\"uk\">\n                <FlagIcon>\n                  <use href={`${sprite}#icon-uk`}></use>\n                </FlagIcon>\n                English\n              </LabelStyle>\n              <FieldStyle type=\"text\" name=\"en\" id=\"uk\" />\n           </InputWrapper>\n            <ErrMsgStyle name=\"en\" component=\"div\" />\n  \n        </FormWrapper>\n\n            <BtnWrapper>\n              <FormBtn type=\"submit\">Add</FormBtn>\n              <FormBtn type=\"button\" onClick={toggleModal}>\n                Cancel\n              </FormBtn>\n            </BtnWrapper>\n          </FormStyle>\n        )}\n      </Formik>\n    </AddWordModalContainer>\n  );\n};\n\n\n","import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const AddWordModalContainer = styled.div`\n  position: absolute;\n  width: 342px;\n  max-height: 100vh;\n  /* overflow: auto; */\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scalex(1);\n  border-radius: 15px;\n  /* height: 621px; */\n  background: ${({ theme }) => theme.green};\n  padding: 48px 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 627px;\n    padding: 48px 64px;\n  }\n`;\n\nexport const BtnClose = styled.svg`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n    top: 20px;\n    right: 20px;\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.white};\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 40px;\n    line-height: 1.2;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ModaltText = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.white};\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    color: rgba(252, 252, 252, 0.8);\n    margin-bottom: 32px;\n  }\n`;\n\n// * =========== FORM ===========\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 32px;\n    align-items: center;\n  }\n`;\n\nexport const LabelStyle = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 4.5px;\n  margin-bottom: 4px;\n  font-weight: 500;\n  font-size: 14px;\n  color: ${({ theme }) => theme.white};\n\n  @media screen and (min-width: 768px) {\n    order: 2;\n    margin-bottom: 0;\n    gap: 8px;\n  }\n`;\n\nexport const FlagIcon = styled.svg`\n  width: 28px;\n  height: 28px;\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nexport const FieldStyle = styled(Field)`\n  border: 1px solid #d1d5db;\n  background: ${({ theme }) => theme.green};\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 311px;\n  height: 48px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 11.5;\n  color: ${({ theme }) => theme.white};\n  margin-bottom: 16px;\n\n  :hover {\n    outline: none;\n    border-color: ${({ theme }) => theme.white};\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.white};\n  }\n\n  @media screen and (min-width: 768px) {\n    order: 1;\n    border: 1px solid rgba(252, 252, 252, 0.3);\n    padding: 16px 18px;\n    width: 354px;\n    height: 56px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const ErrMsgStyle = styled(ErrorMessage)`\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 120%;\n  color: ${({ theme }) => theme.white};\n  margin-top: -10px;\n  margin-bottom: 16px;\n`;\n\nexport const ErrMsgCategories = styled(ErrorMessage)`\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 1.2;\n  color: ${({ theme }) => theme.white};\n  margin-top: 10px;\n  margin-bottom: 16px;\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    gap: 10px;\n    margin-top: 32px;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  border: 1px solid rgba(252, 252, 252, 0.4);\n  border-radius: 30px;\n  padding: 12px 45px;\n  width: 159px;\n  height: 48px;\n  background: ${({ theme }) => theme.green};\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.white};\n\n  &:hover {\n    background: ${({ theme }) => theme.white};\n    color: ${({ theme }) => theme.black};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 245px;\n    height: 56px;\n  }\n`;\n\n// ? =========== CATAGORIES ===========\n\nexport const CategoriesWrapper = styled.div`\n  margin-bottom: 32px;\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n`;\n\nexport const StyledSelect = styled.select`\n  border: 1px solid #d1d5db;\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 311px;\n  height: 48px;\n  background: #85aa9f;\n  font-size: 16px;\n  color: #fcfcfc;\n  /* appearance: none; */\n  cursor: pointer;\n\n  &:hover {\n    outline: none;\n    border-color: ${({ theme }) => theme.white};\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.white};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: calc(50% - 3px);\n    right: 16px;\n    width: 0;\n    height: 0;\n    border-style: solid;\n    border-width: 6px 6px 0;\n    border-color: #fcfcfc transparent transparent;\n    transform: translateY(-50%);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 204px;\n    border: 1px solid rgba(252, 252, 252, 0.3);\n  }\n`;\n\nexport const FieldSelect = styled(Field)`\n  & + ${StyledSelect} {\n    & option {\n      font-weight: 500;\n      font-size: 16px;\n      line-height: 1.5;\n      color: rgba(18, 20, 23, 0.5);\n      border-radius: 15px;\n      padding: 12px 107px 12px 24px;\n      width: 311px;\n      height: 240px;\n      box-shadow: 0 4px 47px 0 rgba(18, 20, 23, 0.08);\n      background: #fff;\n      cursor: pointer;\n    }\n\n    & option:hover {\n      color: ${({ theme }) => theme.green};\n      background: #fff;\n\n    }\n    \n    & option:checked {\n      color: ${({ theme }) => theme.green};\n    }\n  }\n`;\n\nexport const Option = styled.option`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  color: rgba(18, 20, 23, 0.5);\n  border-radius: 15px;\n  padding: 12px 107px 12px 24px;\n  width: 311px;\n  height: 240px;\n  box-shadow: 0 4px 47px 0 rgba(18, 20, 23, 0.08);\n  background: #fff;\n  cursor: pointer;\n`;\n\nexport const RadioBtnWrapper = styled.div`\n  margin-top: 8px;\n  display: flex;\n  font-weight: 400;\n  font-size: 12px;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n`;\n\nexport const RadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: ${({ theme }) => theme.white};\n`;\n\nexport const RadioInput = styled.input`\n  position: relative;\n  appearance: none;\n  width: 18px;\n  height: 18px;\n  border: 2px solid rgba(252, 252, 252, 0.2);\n  border-radius: 50%;\n  cursor: pointer;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 10px;\n    height: 10px;\n    background-color: transparent;\n    border-radius: 50%;\n  }\n\n  &:checked {\n    border-color: ${({ theme }) => theme.white};\n    &::before {\n      background-color: ${({ theme }) => theme.white};\n    }\n  }\n  @keyframes borderChange {\n    from {\n      border: 2px solid rgba(252, 252, 252, 0.2);\n    }\n    to {\n      border-color: ${({ theme }) => theme.white};\n    }\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DashboardContainer = styled.div`\n  @media screen and (min-width: 1440px) {\n    width: 1240px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const StatisticsContainer = styled.div`\n\n    @media screen and (min-width: 768px) { \n  display: flex;\n  align-items: center;\n  gap: 16px;\n    }\n`;\n\nexport const StatisticsText = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  color: rgba(18, 20, 23, 0.5);\n  line-height: 1.5;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 0;\n  }\n`;\n\nexport const Wrapper = styled.div`\nmargin-top: 8px;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n\n    @media screen and (min-width: 768px) {\n    margin-top: 0;  \n    }\n`;\n\nexport const AddWordButton = styled.button`\n  border: none;\n  background: none;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  display: flex;\n    gap: 8px;\n  &:hover {\n    color: ${({ theme }) => theme.green};\n  }\n`;\n\nexport const NavLinkStyle = styled(Link)`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  gap: 8px;\n  color: ${({ theme }) => theme.black};\n  &:hover {\n    color: ${({ theme }) => theme.green};\n  }\n`;\n\nexport const IconSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const TrainingPageContainer = styled.div`\n  background: ${({ theme }) => theme.white1};\n  padding-top: 24px;\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-bottom: 76px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n\n    padding-top: 62;\n    padding-left: 94px;\n    padding-right: 93px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StartContainer = styled.div`\n  margin-top: 51px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 78px;\n    align-items: start;\n  }\n\n    @media screen and (min-width: 1440px) {\n    margin-top: 131px;\n    padding: 18px 25px;\n    flex-direction: row;\n    }\n`;\n\n\nexport const PictureStyle = styled.picture`\n  display: flex;\n\n    @media screen and (min-width: 1440px) {\n        order: 2;\n    }\n`;\n\nexport const ContentContainer = styled.div`\n@media screen and (min-width: 1440px) {\n    display: flex;\n    flex-direction: column;\n    width: 581px;\n    order: 1;\n}\n`;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  margin-top: 32px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n    margin-bottom: 32px;\n    font-size: 20px;\n  }\n\n    @media screen and (min-width: 1440px) {\n    margin-top: 0;\n    margin-bottom: 32px;\n    }\n`;\n\nexport const Text = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.3;\n  margin-bottom: 132px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.5;\n    margin-bottom: 64px;\n  }\n`;\n\nexport const NavigateContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 151px;\n  }\n`;\n\nexport const LinkStyle = styled(Link)`\n  background: ${({ theme }) => theme.green};\n  color: ${({ theme }) => theme.white};\n  border-radius: 30px;\n  padding: 16px;\n  width: 343px;\n  height: 56px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  text-align: center;\n\n  &:hover {\n    background: #a5c0b8;\n    color: ${({ theme }) => theme.white};\n  }\n\n    @media screen and (min-width: 1440px) {\npadding: 14px;\nwidth: 215px;\n    }\n`;\n\nexport const LinkStyle2 = styled(Link)`\n  font-weight: 700;\n  font-size: 16px;\n  color: rgba(18, 20, 23, 0.5);\n  text-align: center;\n\n  &:hover {\n    color: ${({ theme }) => theme.black};\n  }\n\n  @media screen and (min-width: 768px) {\n    border: 1px solid ${({ theme }) => theme.green};\n    border-radius: 30px;\n    padding: 14px;\n    width: 203px;\n    height: 56px;\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 1.56;\n    color: ${({ theme }) => theme.green};\n\n    &:hover {\n      background: ${({ theme }) => theme.green};\n      color: ${({ theme }) => theme.white};\n    }\n  }\n`;\n","import React, { useState } from 'react'\nimport reportMob from '../../img/reportMob.png';\nimport repotMob2x from '../../img/reportMob@2x.png';\nimport reportMobWebp from '../../img/reportMob.webp';\nimport reportMob2xWebp from '../../img/reportMob@2x.webp';\nimport report from '../../img/report.png';\nimport report2x from '../../img/report@2x.png';\nimport reportWebp from '../../img/report.webp';\nimport report2xWebp from '../../img/report@2x.webp';\nimport { ContentContainer, LinkStyle, LinkStyle2, NavigateContainer, PictureStyle, StartContainer, Text, Title } from './StartTraining.styled';\nimport { AddWordModal } from 'components/AddWordModal/AddWordModal';\nimport { Modal } from 'components/Modal/Modal';\n\n\nexport const StartTraining = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  return (\n    <StartContainer>\n    <PictureStyle>\n      <source\n        srcSet={`${reportWebp} 1x, ${report2xWebp} 2x`}\n        media=\"(min-width: 768px)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcSet={`${report} 1x, ${report2x} 2x`}\n        media=\"(min-width: 768px)\"\n      />\n      <source\n        srcSet={`${reportMobWebp} 1x, ${reportMob2xWebp} 2x`}\n        media=\"(max-width: 767px)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcSet={`${reportMob} 1x, ${repotMob2x} 2x`}\n        media=\"(max-width: 767px)\"\n      />\n      <img src={reportMobWebp} alt=\"report form\" />\n    </PictureStyle>\n   <ContentContainer>\n      <Title>You don't have a single word to learn right now. </Title>\n      <Text>\n        Please create or add a word to start the workout. We want to improve\n        your vocabulary and develop your knowledge, so please share the words\n        you are interested in adding to your study.\n      </Text>\n      <NavigateContainer>\n        <LinkStyle to = '/dictionary' onClick={toggleModal}>Add word</LinkStyle>\n        <LinkStyle2 to = '/dictionary'>Cancel</LinkStyle2>\n      </NavigateContainer>\n   </ContentContainer>\n\n   {isOpen && (\n        <Modal toggleModal={toggleModal}>\n        <AddWordModal/>\n        </Modal>\n      )}\n  </StartContainer>\n  )\n}\n","import styled from 'styled-components';\n\nexport const TrainingListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 343px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n\n    @media screen and (min-width: 1440px) {\n      flex-direction: row;\n      width: 1024px;\n    }\n  }\n`;\n\nexport const TaskItem = styled.li`\n  border-bottom: 1px solid #dbdbdb;\n  border-radius: 8px 8px 0 0;\n  padding: 22px 22px 18px 22px;\n  width: 100%;\n  height: 195px;\n  background: ${({ theme }) => theme.white};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  &:last-child {\n    border-bottom: none;\n    border-radius: 0 0 8px 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 282px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 302px;\n    border-bottom: none;\n    border-right: 1px solid #dbdbdb;\n    border-radius: 8px 0 0 0;\n  }\n\n  &:last-child {\n    border-right: none;\n  }\n`;\n\nexport const InputStyle = styled.input`\n  border: none;\n  background: none;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    color: ${({ theme }) => theme.black};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const BtnNext = styled.button`\n  background: none;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  color: rgba(18, 20, 23, 0.5);\n\n  &:hover {\n    color: ${({ theme }) => theme.black};\n  }\n`;\n\nexport const WrapforUk = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\n  font-size: 14px;\n  justify-content: flex-end;\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const LanText = styled.p``;\n","import {\n  BtnNext,\n  Container,\n  InputStyle,\n  TaskItem,\n  Text,\n  TrainingListContainer,\n  WrapforUk,\n} from './TrainingCard.styled';\nimport { IconSvg } from 'components/Dashboard/Dashboard.styled';\nimport sprite from '../../icons/sprites.svg';\nimport { FlagIcon } from 'components/AddWordModal/AddWordModal.styled';\nimport { useSelector } from 'react-redux';\nimport { selectAnswers } from '../../redux/selectors';\n\nexport const TrainingCard = ({ task, onNextClick, inputEnValue, setInputEnValue, inputUaValue, setInputUaValue, showNextButton }) => {\n  const answers = useSelector(selectAnswers);\n\n  const handleNext = () => {\n    onNextClick(task);\n    console.log(answers);\n};\n  \n  return (\n    <TrainingListContainer>\n      <TaskItem>\n      {(task.task === \"ua\") ? <Text>{task.en}</Text> : <InputStyle\n            type=\"text\" \n            value={inputEnValue} \n            onChange={(e) => setInputEnValue(e.target.value)} \n            placeholder=\"Enter translation\" \n        />}\n        <Container>\n          {showNextButton && <BtnNext onClick={handleNext}>\n            Next\n            <IconSvg>\n              <use href={`${sprite}#icon-horizontal`}></use>\n            </IconSvg>\n          </BtnNext>}\n          <WrapforUk>\n            <FlagIcon>\n              <use href={`${sprite}#icon-uk`}></use>\n            </FlagIcon>\n            <p>English</p>\n          </WrapforUk>\n        </Container>\n      </TaskItem>\n      <TaskItem>\n        {(task.task === \"en\") ? <Text>{task.ua}</Text> : <InputStyle\n            type=\"text\" \n            value={inputUaValue} \n            onChange={(e) => setInputUaValue(e.target.value)} \n            placeholder=\"Введіть переклад\" \n        />}\n        <WrapforUk>\n          <FlagIcon>\n            <use href={`${sprite}#icon-ua`}></use>\n          </FlagIcon>\n          <p>Ukrainian</p>\n        </WrapforUk>\n      </TaskItem>\n    </TrainingListContainer>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const TrainingListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 343px;\n`;\n\nexport const TaskItem = styled.li`\n  border-bottom: 1px solid #dbdbdb;\n  border-radius: 8px 8px 0 0;\n  padding: 22px 22px 18px 22px;\n  width: 100%;\n  height: 195px;\n  background: ${({ theme }) => theme.white};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  &:last-child {\n    border-bottom: none;\n    border-radius: 0 0 8px 8px;\n  }\n`;\n\nexport const InputStyle = styled.input`\n    border: none;\n    background: none;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.5;\n    width: 100%;\n\n    &:focus {\n        outline: none;\n\n    }\n\n    &::placeholder {\n        color: ${({ theme }) => theme.black};\n\n    }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\nfont-size: 14px;\n`;\n\nexport const BtnNext = styled.button`\n    background: none;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\nfont-size: 16px;\nline-height: 1.5;\ncolor: rgba(18, 20, 23, 0.5);\n\n    &:hover {\n        color: ${({ theme }) => theme.black};\n    }\n`;\n\nexport const WrapforUk = styled.div`\n   display: flex;\n  gap: 8px;\n  align-items: center;\n  font-weight: 500;\nfont-size: 14px;\njustify-content: flex-end;\n`;\n\nexport const BtnContainer = styled.div`\nmargin-top: 116px;\n   display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    flex-direction: row;\n    align-items: center;\n    justify-content: start;\n    gap: 10px;\n    margin-bottom: 151px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 80px;\n  }\n  `;\n\n  export const BtnSave = styled.button`\n  background: ${({ theme }) => theme.green};\n  color: ${({ theme }) => theme.white};\n  border-radius: 30px;\n  padding: 16px;\n  width: 343px;\n  height: 56px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  text-align: center;\n\n  &:hover {\n    background: #a5c0b8;\n    color: ${({ theme }) => theme.white};\n  }\n\n@media screen and (min-width: 768px) {\n    width: 203px;\n}\n\n    @media screen and (min-width: 1440px) {\npadding: 14px;\nwidth: 215px;\n    }\n`;\n\nexport const LinkCancel = styled(Link)`\n  font-weight: 700;\n  font-size: 16px;\n  color: rgba(18, 20, 23, 0.5);\n  text-align: center;\n  background: none;\n\n  &:hover {\n    color: ${({ theme }) => theme.black};\n  }\n\n  @media screen and (min-width: 768px) {\n    border: 1px solid ${({ theme }) => theme.green};\n    border-radius: 30px;\n    padding: 14px;\n    width: 203px;\n    height: 56px;\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 1.56;\n    color: ${({ theme }) => theme.green};\n\n    &:hover {\n      background: ${({ theme }) => theme.green};\n      color: ${({ theme }) => theme.white};\n    }\n  }\n`;\n\n","import styled from 'styled-components';\n\nexport const WellDoneContainer = styled.div`\n  position: absolute;\n  width: 342px;\n  max-height: 100vh;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scalex(1);\n  border-radius: 15px;\n  background: ${({ theme }) => theme.green};\n  padding: 48px 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 627px;\n    padding: 48px 64px;\n  }\n`;\n\nexport const BtnClose = styled.svg`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n    top: 20px;\n    right: 20px;\n  }\n`;\n\nexport const Title = styled.h2`\nfont-weight: 600;\nfont-size: 24px;\nline-height: 1.17;\nletter-spacing: -0.02em;\ntext-align: center;\ncolor: ${({ theme }) => theme.white};\nmargin-bottom: 28px;\n`;\n\nexport const PictureStyle = styled.picture`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n`;\n\nexport const ColumnsWrapper = styled.div`\ndisplay: flex;\ngap: 32px;\nmargin-bottom: 24px;\n`;\n\nexport const ColumnsTitle = styled.h3`\nfont-weight: 400;\nfont-size: 14px;\nline-height: 1.5;\ncolor: rgba(252, 252, 252, 0.5);\nmargin-bottom: 8px;\n`;","import React from 'react';\nimport { BtnClose, ColumnsTitle, ColumnsWrapper, PictureStyle, Title, WellDoneContainer } from './WellDoneModal.styled';\nimport sprite from '../../icons/sprites.svg';\nimport bookMob from '../../img/bookMob.png';\nimport bookMob2x from '../../img/bookMob@2x.png';\nimport bookMobWeb from '../../img/bookMob.webp';\nimport bookMob2xWeb from '../../img/bookMob@2x.webp';\nimport book from '../../img/book.png';\nimport book2x from '../../img/book @2x.png';\nimport bookWeb from '../../img/book.webp';\nimport book2xWeb from '../../img/book @2x.webp';\nimport { useSelector } from 'react-redux';\nimport { selectCheckedAnswers } from '../../redux/selectors';\n\nexport const WellDoneModal = ({ toggleModal }) => {\n    const checkAnswers = useSelector(selectCheckedAnswers);\n\n    const mistakes = checkAnswers.filter(answer => !answer.isDone);\n    const correctAnswers = checkAnswers.filter(answer => answer.isDone);\nconsole.log( 'correctAnswers:', correctAnswers);\nconsole.log( 'mistakes:', mistakes);\n\n  return (\n    <WellDoneContainer>\n      <BtnClose onClick={toggleModal} type=\"button\">\n        <svg>\n          <use href={`${sprite}#icon-close`}></use>\n        </svg>\n      </BtnClose>\n      <Title>Well Done!</Title>\n     <ColumnsWrapper>\n          <div>\n            <ColumnsTitle>Correct answers:</ColumnsTitle>\n            {correctAnswers.map((answer, index) => (\n                <p key={index}>{answer.en}</p>\n            ))\n            }\n          </div>\n          <div>\n            <ColumnsTitle>Mistakes:</ColumnsTitle>\n            {mistakes.map((answer, index) => (\n                <p key={index}>{answer.en}</p>\n            ))\n            }\n          </div>\n     </ColumnsWrapper>\n     <PictureStyle>\n      <source\n        srcSet={`${bookWeb} 1x, ${book2xWeb} 2x`}\n        media=\"(min-width: 768px)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcSet={`${book} 1x, ${book2x} 2x`}\n        media=\"(min-width: 768px)\"\n      />\n      <source\n        srcSet={`${bookMobWeb} 1x, ${bookMob2xWeb} 2x`}\n        media=\"(max-width: 767px)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcSet={`${bookMob} 1x, ${bookMob2x} 2x`}\n        media=\"(max-width: 767px)\"\n      />\n      <img src={bookMobWeb} alt=\"report form\" />\n    </PictureStyle>\n    </WellDoneContainer>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectAnswers,  selectTasks } from '../../redux/selectors';\nimport { TrainingCard } from 'components/TrainingCard/TrainingCard';\nimport { BtnContainer, BtnSave, LinkCancel } from './TrainingRoom.styled';\nimport { setAnswers, setCheckedAnswers } from '../../redux/words/wordsSlice';\nimport { sendAnswers } from '../../redux/words/operations';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { Modal } from 'components/Modal/Modal';\nimport { WellDoneModal } from 'components/WellDoneModal/WellDoneModal';\n\nexport const TrainingRoom = () => {\n  const tasks = useSelector(selectTasks);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [inputEnValues, setInputEnValues] = useState({});\n  const [inputUaValues, setInputUaValues] = useState({});\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dispatch = useDispatch();\n  const answers = useSelector(selectAnswers);\n  const navigate = useNavigate();\n\n\n  const toggleModal = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\nconst handleEnInput = task => {\n  const inputEnValue = inputEnValues[task._id] || '';\n    if (inputEnValue.trim() !== '') {\n      const answerCard = {\n        _id: task._id,\n        en: inputEnValue,\n        ua: task.ua,\n        task: task.task,\n    \n      };\n      dispatch(setAnswers([...answers, answerCard]));\n      setInputEnValues(prevInputValues => {\n        return { ...prevInputValues, [task._id]: '' };\n      });\n    }\n}\n\n\nconst handleUaInput = task => {\n  const inputUaValue = inputUaValues[task._id] || '';\n    if (inputUaValue.trim() !== '') {\n      const answerCard = {\n        _id: task._id,\n        en: task.en,\n        ua: inputUaValue,\n        task: task.task,\n      };\n      dispatch(setAnswers([...answers, answerCard]));\n      setInputEnValues(prevInputValues => {\n        return { ...prevInputValues, [task._id]: '' };\n      });\n    }\n}\n\n\n  const handleNextClick = task => {\n    handleEnInput(task);\n    handleUaInput(task);\n    if (currentCardIndex < tasks.tasks.length - 1) {\n      setCurrentCardIndex(prevIndex => prevIndex + 1);\n    }\n  };\n\n  const handleSave = (task) => {\n    handleNextClick(task);\n    dispatch(sendAnswers(answers))\n      .unwrap()\n      .then((data) => {\n        dispatch(setCheckedAnswers(data));\n        toggleModal();\n      })\n      .catch(error => {\n        toast.error('Something went wrong. Your progress will not be saved!');\n        navigate('/dictionary');\n      });\n  };\n\n  return (\n    <div>\n      {tasks.tasks && tasks.tasks[currentCardIndex] && (\n        <TrainingCard\n          task={tasks.tasks[currentCardIndex]}\n          onNextClick={handleNextClick}\n          inputEnValue={inputEnValues[tasks.tasks[currentCardIndex]._id] || ''}\n          setInputEnValue={value =>\n            setInputEnValues({\n              ...inputEnValues,\n              [tasks.tasks[currentCardIndex]._id]: value,\n            })\n          }\n          inputUaValue={inputUaValues[tasks.tasks[currentCardIndex]._id] || ''}\n          setInputUaValue={value =>\n            setInputUaValues({\n              ...inputUaValues,\n              [tasks.tasks[currentCardIndex]._id]: value,\n            })\n          }\n          showNextButton={currentCardIndex < tasks.tasks.length - 1}\n        />\n      )}\n      <BtnContainer>\n        <BtnSave type=\"submit\" onClick={handleSave}>\n          Save\n        </BtnSave>\n        <LinkCancel to=\"/dictionary\">Cancel</LinkCancel>\n      </BtnContainer>\n\n      {isOpen && (\n        <Modal toggleModal={toggleModal}>\n          <WellDoneModal  toggleModal={toggleModal}/>\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TrainingPageContainer } from './TrainingPage/TrainingPage.styled';\nimport { StartTraining } from '../../components/StartTraining/StartTraining';\nimport { fetchTasks } from '../../redux/words/operations';\nimport { selectTasks } from '../../redux/selectors';\nimport { TrainingRoom } from 'components/TrainingRoom/TrainingRoom';\n\nconst TrainingPage = () => {\n  const dispatch = useDispatch();\nconst tasks = useSelector(selectTasks);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n\n  return (\n    <TrainingPageContainer>\n    {tasks ? <TrainingRoom tasks={tasks} /> : <StartTraining />}\n    </TrainingPageContainer>\n  );\n};\n\nexport default TrainingPage;\n\n\n\n"],"names":["validationSchema","Yup","shape","category","required","verbType","when","is","then","en","matches","ua","AddWordModal","_ref","toggleModal","categories","close","useSelector","selectCategories","dispatch","useDispatch","error","selectWordsError","_useState","useState","_useState2","_slicedToArray","setVerbType","useEffect","toast","_jsxs","AddWordModalContainer","children","_jsx","BtnClose","onClick","type","href","concat","sprite","ModalTitle","ModaltText","Formik","initialValues","onSubmit","values","dataToSend","_objectSpread","isIrregular","addWord","unwrap","fetchOwnWords","page","perPage","catch","_ref2","setFieldValue","FormStyle","CategoriesWrapper","Field","as","StyledSelect","name","id","value","map","Option","ErrMsgCategories","component","RadioBtnWrapper","RadioLabel","RadioInput","checked","onChange","ErrorMessage","FormWrapper","InputWrapper","LabelStyle","htmlFor","FlagIcon","FieldStyle","ErrMsgStyle","BtnWrapper","FormBtn","styled","_templateObject","_taggedTemplateLiteral","theme","green","_templateObject2","_templateObject3","white","_templateObject4","_ref3","Form","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_ref4","_templateObject9","_templateObject10","_ref5","_ref6","_ref7","_ref8","_templateObject11","_ref9","_templateObject12","_ref10","_templateObject13","_templateObject14","_ref11","_ref12","_ref13","_ref14","black","_templateObject15","_templateObject16","_ref15","_ref16","_templateObject17","_ref17","_ref18","_templateObject18","_templateObject19","_templateObject20","_ref19","_templateObject21","_ref20","_ref21","_ref22","DashboardContainer","StatisticsContainer","StatisticsText","Wrapper","AddWordButton","NavLinkStyle","Link","IconSvg","TrainingPageContainer","white1","StartContainer","PictureStyle","ContentContainer","Title","Text","NavigateContainer","LinkStyle","LinkStyle2","StartTraining","isOpen","setIsOpen","prevState","srcSet","reportWebp","report2xWebp","media","report","report2x","reportMobWebp","reportMob2xWebp","reportMob","repotMob2x","src","alt","to","Modal","TrainingListContainer","TaskItem","InputStyle","Container","BtnNext","WrapforUk","TrainingCard","task","onNextClick","inputEnValue","setInputEnValue","inputUaValue","setInputUaValue","showNextButton","answers","selectAnswers","e","target","placeholder","console","log","BtnContainer","BtnSave","LinkCancel","WellDoneContainer","ColumnsWrapper","ColumnsTitle","WellDoneModal","checkAnswers","selectCheckedAnswers","mistakes","filter","answer","isDone","correctAnswers","index","bookWeb","book2xWeb","book","book2x","bookMobWeb","bookMob2xWeb","bookMob","bookMob2x","TrainingRoom","tasks","selectTasks","currentCardIndex","setCurrentCardIndex","_useState3","_useState4","inputEnValues","setInputEnValues","_useState5","_useState6","inputUaValues","setInputUaValues","_useState7","_useState8","navigate","useNavigate","handleNextClick","_id","trim","answerCard","setAnswers","_toConsumableArray","prevInputValues","_defineProperty","handleEnInput","handleUaInput","length","prevIndex","sendAnswers","data","setCheckedAnswers","fetchTasks"],"sourceRoot":""}