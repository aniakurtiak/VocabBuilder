{"version":3,"file":"static/js/901.b84e6ed2.chunk.js","mappings":"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","sources":["icons/search.svg","components/Filters/Filters.styled.js","components/Categories/Categories.styled.js","components/Categories/Categories.jsx","components/Filters/Filters.jsx","components/Dashboard/Dashboard.styled.js","components/Dashboard/Dashboard.jsx","pages/DictionaryPage/DictionaryPage.styled.js","components/WordTable/WordsTable.styled.js","components/ActionsPopover/ActionsPopover.styled.js","components/ActionsPopover/ActionsPopover.jsx","components/WordTable/WordsTable.jsx","components/AddWordModal/AddWordModal.styled.js","components/AddWordModal/AddWordModal.jsx","components/EditWordModal/EditWordModal.styled.js","components/EditWordModal/EditWordModal.jsx","pages/DictionaryPage/DictionaryPage.jsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.167 15.833a6.667 6.667 0 1 0 0-13.333 6.667 6.667 0 0 0 0 13.333ZM17.5 17.5l-3.625-3.625\",\n    stroke: \"#121417\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.0c70c359be9f625367cb2a522feff44d.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { ReactComponent as SearchSvg } from '../../icons/search.svg';\n\nexport const FiltersContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  margin-bottom: 36px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: start;\n    margin-bottom: 28px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    justify-content: center;\n    margin-bottom: 0;\n  }\n\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const SearchInput = styled.input`\n  border: 1px solid rgba(18, 20, 23, 0.1);\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 343px;\n  height: 48px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  background: ${({ theme }) => theme.white1};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.black};\n  }\n\n  &:hover {\n    outline: none;\n    border-color: ${({ theme }) => theme.green};\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.green};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 274px;\n  }\n`;\n\nexport const SearchIcon = styled(SearchSvg)`\n  position: absolute;\n  right: 24px;\n  top: 14px;\n`;\n","import styled from 'styled-components';\n\nexport const CategoriesWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 8px;\n    align-items: center;\n  }\n`;\n\nexport const selectStyles = {\n  input: (provided, state) => ({\n    ...provided,\n    margin: '0',\n    padding: '0',\n  }),\n\n  valueContainer: (provided, state) => ({\n    ...provided,\n    margin: '0',\n    padding: '0',\n  }),\n\n  control: (provided, state) => ({\n    ...provided,\n    border: '1px solid rgba(18, 20, 23, 0.1)',\n    borderRadius: '15px',\n    padding: '12px 24px',\n    width: '343px',\n    height: '48px',\n    background: '#f8f8f8',\n\n    '&:hover': {\n      outline: 'none',\n      borderColor: '#85aa9f',\n      boxShadow: 'none',\n    },\n\n    '&:focus-within': {\n      outline: 'none',\n      borderColor: '#85aa9f',\n      boxShadow: 'none',\n    },\n\n    '@media screen and (min-width: 768px)': {\n      width: '164px',\n    },\n  }),\n\n  dropdownIndicator: (provided, state) => ({\n    ...provided,\n    color: '#121417',\n    cursor: 'pointer',\n    padding: '0',\n    '& svg': {\n      width: '20px',\n      height: '20px',\n      strokeWidth: '0.02px',\n      '&:hover': {\n        fill: '#85aa9f',\n      },\n    },\n  }),\n\n  placeholder: (provided, state) => ({\n    ...provided,\n    color: '#121417',\n    fontSize: '16px',\n    fontStyle: 'normal',\n    fontWeight: '500',\n    lineHeight: '1.5',\n    padding: '0',\n  }),\n\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: state.isFocused ? '#85aa9f' : 'transparent', // зелений колір для опції при наведенні\n    fontWeight: '500',\n    lineHeight: '1.5',\n    color: '#121417',\n  }),\n\n  singleValue: (provided, state) => ({\n    ...provided,\n    fontWeight: '500',\n    lineHeight: '1.5',\n    color: '#121417',\n  }),\n};\n\nexport const RadioBtnWrapper = styled.div`\n  margin-top: 8px;\n  display: flex;\n  font-weight: 400;\n  font-size: 12px;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n`;\n\nexport const RadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const RadioInput = styled.input`\n  position: relative;\n  appearance: none;\n  width: 18px;\n  height: 18px;\n  border: 2px solid rgba(18, 20, 23, 0.2);\n  border-radius: 50%;\n  cursor: pointer;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 10px;\n    height: 10px;\n    background-color: transparent;\n    border-radius: 50%;\n  }\n\n  &:checked {\n    border-color: ${({ theme }) => theme.green};\n    &::before {\n      background-color: ${({ theme }) => theme.green};\n    }\n  }\n  @keyframes borderChange {\n    from {\n      border: 2px solid rgba(18, 20, 23, 0.2);\n    }\n    to {\n      border-color: ${({ theme }) => theme.green};\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectCategories,\n  selectSelectedCategory,\n} from '../../redux/selectors';\nimport Select from 'react-select';\nimport {\n    CategoriesWrapper,\n  RadioBtnWrapper,\n  RadioInput,\n  RadioLabel,\n  selectStyles,\n} from '../Categories/Categories.styled';\nimport { setCategory, setVerbType } from '../../redux/filters/filtersSlice';\n\nexport const Categories = () => {\n  const categories = useSelector(selectCategories);\n  const selectedCategory = useSelector(selectSelectedCategory);\n  const dispatch = useDispatch();\n\n  const handleCategoryChange = selectedOption => {\n    dispatch(setCategory(selectedOption));\n  };\n\n  const handleVerbTypeChange = event => {\n    dispatch(setVerbType(event.target.value));\n  };\n\n  return (\n    <CategoriesWrapper>\n      <Select\n        styles={selectStyles}\n        options={categories}\n        value={selectedCategory}\n        onChange={handleCategoryChange}\n        placeholder=\"Categories\"\n      />\n      {selectedCategory.value === 'Verb' && (\n        <RadioBtnWrapper>\n          <RadioLabel>\n            <RadioInput\n              type=\"radio\"\n              name=\"verbType\"\n              value=\"regular\"\n              onChange={handleVerbTypeChange}\n            />{' '}\n            Regular\n          </RadioLabel>\n          <RadioLabel>\n            <RadioInput\n              type=\"radio\"\n              name=\"verbType\"\n              value=\"irregular\"\n              onChange={handleVerbTypeChange}\n            />{' '}\n            Irregular\n          </RadioLabel>\n        </RadioBtnWrapper>\n      )}\n    </CategoriesWrapper>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchCategories } from '../../redux/filters/operations';\nimport { setKeyword } from '../../redux/filters/filtersSlice';\nimport {\n  FiltersContainer,\n  InputWrapper,\n  SearchIcon,\n  SearchInput,\n} from './Filters.styled';\nimport { Categories } from 'components/Categories/Categories';\n\nexport const Filters = () => {\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  const handleKeywordChange = event => {\n    setSearchKeyword(event.target.value.trim());\n  };\n\n  useEffect(() => {\n    const debounceTimer = setTimeout(() => {\n      dispatch(setKeyword(searchKeyword));\n    }, 300);\n\n    return () => {\n      clearTimeout(debounceTimer);\n    };\n  }, [searchKeyword, dispatch]);\n\n  return (\n    <FiltersContainer>\n      <InputWrapper>\n        <SearchInput\n          type=\"text\"\n          value={searchKeyword}\n          onChange={handleKeywordChange}\n          placeholder=\"Find the word\"\n        />\n        <button>\n          <SearchIcon />\n        </button>\n      </InputWrapper>\n      <Categories/>\n    </FiltersContainer>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DashboardContainer = styled.div`\n  @media screen and (min-width: 1440px) {\n    width: 1240px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const StatisticsContainer = styled.div`\n\n    @media screen and (min-width: 768px) { \n  display: flex;\n  align-items: center;\n  gap: 16px;\n    }\n`;\n\nexport const StatisticsText = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  color: rgba(18, 20, 23, 0.5);\n  line-height: 1.5;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 0;\n  }\n`;\n\nexport const Wrapper = styled.div`\nmargin-top: 8px;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n\n    @media screen and (min-width: 768px) {\n    margin-top: 0;  \n    }\n`;\n\nexport const AddWordButton = styled.button`\n  border: none;\n  background: none;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  display: flex;\n    gap: 8px;\n  &:hover {\n    color: ${({ theme }) => theme.green};\n  }\n`;\n\nexport const NavLinkStyle = styled(Link)`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  gap: 8px;\n  color: ${({ theme }) => theme.black};\n  &:hover {\n    color: ${({ theme }) => theme.green};\n  }\n`;\n\nexport const IconSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n","import { Filters } from 'components/Filters/Filters';\nimport React from 'react';\nimport {\n  AddWordButton,\n  DashboardContainer,\n  IconSvg,\n  NavLinkStyle,\n  StatisticsContainer,\n  StatisticsText,\n  Wrapper,\n} from './Dashboard.styled';\nimport sprite from '../../icons/sprites.svg';\n\nexport const Dashboard = ({onClickAddWord}) => {\n\n  return (\n    <DashboardContainer>\n      <Filters />\n\n      <StatisticsContainer>\n        <StatisticsText>To study: </StatisticsText>\n        <Wrapper>\n          <AddWordButton type='button' onClick={onClickAddWord}>\n            Add word\n            <IconSvg>\n              <use href={`${sprite}#icon-plus`}></use>\n            </IconSvg>\n          </AddWordButton>\n          <NavLinkStyle to=\"/training\">\n            Train onself\n            <IconSvg>\n              <use href={`${sprite}#icon-horizontal`}></use>\n            </IconSvg>\n          </NavLinkStyle>\n        </Wrapper>\n      </StatisticsContainer>\n    </DashboardContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DictionaryContainer = styled.div`\n  background: ${({ theme }) => theme.white1};\n  padding-top: 32px;\n  padding-left: 32px;\n  padding-right: 32px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const WordsTableContainer = styled.div`\n  margin-top: 32px;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 15px;\n    padding: 18px;\n    background: #fff;\n    margin-top: 28px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1240px;\n  }\n`;\n\nexport const TableStyle = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`;\n\nexport const TableHead = styled.thead`\n  background: rgba(133, 170, 159, 0.1);\n`;\n\nexport const HeadRow = styled.th`\n  border-bottom: 1px solid #dbdbdb;\n  border-right: 1px solid #dbdbdb;\n  &:last-child {\n    border-right: none;\n    border-radius: 0 8px 0 0;\n  }\n  &:first-child {\n    border-radius: 8px 0 0 0;\n  }\n  font-weight: 500;\n  font-size: 16px;\n  width: ${({ width }) => width}px;\n  padding: 16px 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const TableBody = styled.tbody`\n  box-sizing: border-box;\n`;\n\nexport const TableRow = styled.td`\n  font-size: 14px;\n  border-top: 1px solid #dbdbdb;\n  border-right: 1px solid #dbdbdb;\n  border-left: none;\n  padding: 8px;\n  &:first-child {\n    border-left: none;\n  }\n  &:last-child {\n    border-right: none;\n    padding: 16px 10px 16px 14px;\n    white-space: pre-wrap;\n    background: ${({ theme }) => theme.white};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    font-weight: 500;\n  }\n\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const FlagIcon = styled.svg`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 28px;\n    height: 28px;\n  }\n`;\n\n","import styled from 'styled-components';\n\nexport const PopoverContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ActionsPopoverContainer = styled.div`\n  position: relative;\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 117px;\n  height: 70px;\n  box-shadow: 0 4px 47px 0 rgba(18, 20, 23, 0.08);\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 8px;\n\n    @media screen and (min-width: 768px) {\n        width: 124px;\n        height: 80px;\n    }\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const ActionsBtn = styled.button`\n  background: none;\n  font-weight: 500;\n  font-size: 14px;\n  display: flex;\n    align-items: center;\n    justify-content: center;\n  gap: 8px;\n\n   \n\n    @media screen and (min-width: 768px) {\n        font-size: 16px;\n        line-height: 1.5;\n    }\n`;\n\nexport const IconDots = styled.svg`\n  width: 12px;\n  height: 12px;\n  fill: rgba(18, 20, 23, 0.5);\n  &:hover {\n    fill: ${({ theme }) => theme.black};\n  }\n  &:active {\n    fill: ${({ theme }) => theme.black};\n    }\n\n\n    @media screen and (min-width: 768px) {\n        width: 14px;\n        height: 14px;\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: 16px;\n        height: 16px;\n    }\n`;\n","import React, { useEffect, useState } from 'react';\nimport Popover from 'react-popover';\nimport {\n  ActionsBtn,\n  ActionsPopoverContainer,\n  Icon,\n  IconDots,\n  PopoverContainer,\n} from './ActionsPopover.styled';\nimport sprite from '../../icons/sprites.svg';\n// import { setSelectedWord } from '../../redux/words/wordsSlice';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { selectSelectedWord } from '../../redux/selectors';\n\nexport const ActionsPopover = ({ word, onClickEditWord }) => {\n  console.log(word);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedWord, setSelectedWord] = useState(null); \n//   const dispatch = useDispatch();\n\n//   const selectedWord = useSelector(selectSelectedWord);\n\nconst handleEditClick = (word) => {\n    setSelectedWord(word);\n    console.log(selectedWord);\n    onClickEditWord();\n  };\n\n  useEffect(() => {\n    console.log(selectedWord);\n  }, [selectedWord]);\n\n  const togglePopover = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <PopoverContainer>\n      <Popover\n        isOpen={isOpen}\n        body={\n          <ActionsPopoverContainer>\n            <ActionsBtn onClick={handleEditClick}>\n              <Icon>\n                <use href={`${sprite}#icon-edit`}></use>\n              </Icon>\n              Edit\n            </ActionsBtn>\n            <ActionsBtn>\n              <Icon>\n                <use href={`${sprite}#icon-trash`}></use>\n              </Icon>\n              Delete\n            </ActionsBtn>\n          </ActionsPopoverContainer>\n        }\n        place=\"left\"\n        preferPlace=\"start\"\n        tipSize={0.1}\n        onOuterAction={togglePopover}\n      >\n        <ActionsBtn onClick={togglePopover}>\n          <IconDots>\n            <use href={`${sprite}#icon-dots`}></use>\n          </IconDots>\n        </ActionsBtn>\n      </Popover>\n    </PopoverContainer>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {  selectWords } from '../../redux/selectors';\nimport { fetchOwnWords } from '../../redux/words/operations';\nimport { useTable } from 'react-table';\nimport {\n  FlagIcon,\n  HeadRow,\n  IconContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableStyle,\n  WordsTableContainer,\n} from './WordsTable.styled';\nimport sprite from '../../icons/sprites.svg';\nimport { ActionsPopover } from 'components/ActionsPopover/ActionsPopover';\n// import { setSelectedWord } from '../../redux/words/wordsSlice';\n\n\nexport const WordsTable = ({onClickEditWord}) => {\n  const words = useSelector(selectWords);\n  const dispatch = useDispatch();\n\n\n  const IconUk = ({ text }) => (\n    <IconContainer>\n      <span>{text}</span>\n      <FlagIcon>\n        <use href={`${sprite}#icon-uk`}>z</use>\n      </FlagIcon>\n    </IconContainer>\n  );\n\n  const IconUa = ({ text }) => (\n    <IconContainer>\n      <span>{text}</span>\n      <FlagIcon>\n        <use href={`${sprite}#icon-ua`}>z</use>\n      </FlagIcon>\n    </IconContainer>\n  );\n\n  useEffect(() => {\n    dispatch(fetchOwnWords());\n  }, [dispatch]);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: () => <IconUk text=\"Word\" />,\n        accessor: 'en',\n        width: 82,\n      },\n      {\n        Header: () => <IconUa text=\"Translation\" />,\n        accessor: 'ua',\n        width: 116,\n      },\n      {\n        Header: 'Progress',\n        accessor: 'progress',\n        width: 95,\n      },\n      {\n        Header: '',\n        accessor: 'actions',\n        Cell: ({ row }) => <ActionsPopover word={row.original} onClickEditWord={onClickEditWord} />,\n        width: 50,\n      }\n    ],\n    [onClickEditWord]\n  );\n\n  const data = React.useMemo(() => words || [], [words]);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <WordsTableContainer>\n      <TableStyle {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <HeadRow {...column.getHeaderProps()} width={column.width}>\n                  {column.render('Header')}\n                </HeadRow>\n              ))}\n            </tr>\n          ))}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <TableRow {...cell.getCellProps()}>\n                  {cell.render('Cell', { word: row.original })} \n                  </TableRow>\n                ))}\n              </tr>\n            );\n          })}\n        </TableBody>\n      </TableStyle>\n    </WordsTableContainer>\n  );\n};\n","import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const AddWordModalContainer = styled.div`\n  position: absolute;\n  width: 342px;\n  max-height: 100vh;\n  /* overflow: auto; */\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scalex(1);\n  border-radius: 15px;\n  /* height: 621px; */\n  background: ${({ theme }) => theme.green};\n  padding: 48px 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 627px;\n    padding: 48px 64px;\n  }\n`;\n\nexport const BtnClose = styled.svg`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n    top: 20px;\n    right: 20px;\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.white};\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 40px;\n    line-height: 1.2;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ModaltText = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.white};\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    color: rgba(252, 252, 252, 0.8);\n    margin-bottom: 32px;\n  }\n`;\n\n// * =========== FORM ===========\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 32px;\n    align-items: center;\n  }\n`;\n\nexport const LabelStyle = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 4.5px;\n  margin-bottom: 4px;\n  font-weight: 500;\n  font-size: 14px;\n  color: ${({ theme }) => theme.white};\n\n  @media screen and (min-width: 768px) {\n    order: 2;\n    margin-bottom: 0;\n    gap: 8px;\n  }\n`;\n\nexport const FlagIcon = styled.svg`\n  width: 28px;\n  height: 28px;\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nexport const FieldStyle = styled(Field)`\n  border: 1px solid #d1d5db;\n  background: ${({ theme }) => theme.green};\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 311px;\n  height: 48px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 11.5;\n  color: ${({ theme }) => theme.white};\n  margin-bottom: 16px;\n\n  :hover {\n    outline: none;\n    border-color: ${({ theme }) => theme.white};\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.white};\n  }\n\n  @media screen and (min-width: 768px) {\n    order: 1;\n    border: 1px solid rgba(252, 252, 252, 0.3);\n    padding: 16px 18px;\n    width: 354px;\n    height: 56px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const ErrMsgStyle = styled(ErrorMessage)`\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 120%;\n  color: ${({ theme }) => theme.white};\n  margin-top: -10px;\n  margin-bottom: 16px;\n`;\n\nexport const ErrMsgCategories = styled(ErrorMessage)`\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 1.2;\n  color: ${({ theme }) => theme.white};\n  margin-top: 10px;\n  margin-bottom: 16px;\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    gap: 10px;\n    margin-top: 32px;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  border: 1px solid rgba(252, 252, 252, 0.4);\n  border-radius: 30px;\n  padding: 12px 45px;\n  width: 159px;\n  height: 48px;\n  background: ${({ theme }) => theme.green};\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.white};\n\n  &:hover {\n    background: ${({ theme }) => theme.white};\n    color: ${({ theme }) => theme.black};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 245px;\n    height: 56px;\n  }\n`;\n\n// ? =========== CATAGORIES ===========\n\nexport const CategoriesWrapper = styled.div`\n  margin-bottom: 32px;\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n`;\n\nexport const StyledSelect = styled.select`\n  border: 1px solid #d1d5db;\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 311px;\n  height: 48px;\n  background: #85aa9f;\n  font-size: 16px;\n  color: #fcfcfc;\n  /* appearance: none; */\n  cursor: pointer;\n\n  &:hover {\n    outline: none;\n    border-color: ${({ theme }) => theme.white};\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.white};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: calc(50% - 3px);\n    right: 16px;\n    width: 0;\n    height: 0;\n    border-style: solid;\n    border-width: 6px 6px 0;\n    border-color: #fcfcfc transparent transparent;\n    transform: translateY(-50%);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 204px;\n    border: 1px solid rgba(252, 252, 252, 0.3);\n  }\n`;\n\nexport const FieldSelect = styled(Field)`\n  & + ${StyledSelect} {\n    & option {\n      font-weight: 500;\n      font-size: 16px;\n      line-height: 1.5;\n      color: rgba(18, 20, 23, 0.5);\n      border-radius: 15px;\n      padding: 12px 107px 12px 24px;\n      width: 311px;\n      height: 240px;\n      box-shadow: 0 4px 47px 0 rgba(18, 20, 23, 0.08);\n      background: #fff;\n      cursor: pointer;\n    }\n\n    & option:hover {\n      color: ${({ theme }) => theme.green};\n      background: #fff;\n\n    }\n    \n    & option:checked {\n      color: ${({ theme }) => theme.green};\n    }\n  }\n`;\n\nexport const Option = styled.option`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  color: rgba(18, 20, 23, 0.5);\n  border-radius: 15px;\n  padding: 12px 107px 12px 24px;\n  width: 311px;\n  height: 240px;\n  box-shadow: 0 4px 47px 0 rgba(18, 20, 23, 0.08);\n  background: #fff;\n  cursor: pointer;\n`;\n\nexport const RadioBtnWrapper = styled.div`\n  margin-top: 8px;\n  display: flex;\n  font-weight: 400;\n  font-size: 12px;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n`;\n\nexport const RadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: ${({ theme }) => theme.white};\n`;\n\nexport const RadioInput = styled.input`\n  position: relative;\n  appearance: none;\n  width: 18px;\n  height: 18px;\n  border: 2px solid rgba(252, 252, 252, 0.2);\n  border-radius: 50%;\n  cursor: pointer;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 10px;\n    height: 10px;\n    background-color: transparent;\n    border-radius: 50%;\n  }\n\n  &:checked {\n    border-color: ${({ theme }) => theme.white};\n    &::before {\n      background-color: ${({ theme }) => theme.white};\n    }\n  }\n  @keyframes borderChange {\n    from {\n      border: 2px solid rgba(252, 252, 252, 0.2);\n    }\n    to {\n      border-color: ${({ theme }) => theme.white};\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  AddWordModalContainer,\n  BtnClose,\n  BtnWrapper,\n  CategoriesWrapper,\n  ErrMsgCategories,\n  ErrMsgStyle,\n  FieldStyle,\n  FlagIcon,\n  FormBtn,\n  FormStyle,\n  FormWrapper,\n  InputWrapper,\n  LabelStyle,\n  ModalTitle,\n  ModaltText,\n  Option,\n  RadioBtnWrapper,\n  RadioInput,\n  RadioLabel,\n  StyledSelect,\n} from './AddWordModal.styled';\nimport sprite from '../../icons/sprites.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  selectCategories, selectWordsError,\n} from '../../redux/selectors';\nimport { addWord } from '../../redux/words/operations';\nimport toast from 'react-hot-toast';\n\n\nconst validationSchema = Yup.object().shape({\n  category: Yup.string().required('Category is required'),\n  verbType: Yup.string().when('category', {\n    is: 'verb',\n    then: Yup.string().required('Verb type is required'),\n  }),\n  en: Yup.string()\n    .matches(/\\b[A-Za-z'-]+(?:\\s+[A-Za-z'-]+)*\\b/, 'Invalid English input')\n    .required('English is required'),\n  ua: Yup.string()\n    .matches(/^(?![A-Za-z])[А-ЯІЄЇҐґа-яієїʼ\\s]+$/u, 'Invalid Ukrainian input')\n    .required('Ukrainian is required'),\n});\n\nexport const AddWordModal = ({ toggleModal, close }) => {\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const error = useSelector(selectWordsError);\n  const [verbType, setVerbType] = useState('');\n\n  const handleSubmit = values => {\n    const dataToSend = { ...values };\n    if (values.category === 'verb') {\n      dataToSend.isIrregular = verbType === 'irregular';\n    } \n    dispatch(addWord(dataToSend))\n      .then(() => {\n        close();\n      })\n      .catch(error => {\n        toast.error(error); \n      });\n  };\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  return (\n    <AddWordModalContainer>\n      <BtnClose onClick={toggleModal} type=\"button\">\n        <svg>\n          <use href={`${sprite}#icon-close`}></use>\n        </svg>\n      </BtnClose>\n      <ModalTitle>Add word</ModalTitle>\n      <ModaltText>\n        Adding a new word to the dictionary is an important step in enriching\n        the language base and expanding the vocabulary.\n      </ModaltText>\n\n      <Formik\n        initialValues={{\n          en: '',\n          ua: '',\n          category: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue }) => (\n          <FormStyle>\n            <CategoriesWrapper>\n            <Field as={StyledSelect} name=\"category\" id=\"category\">\n                <option value=\"\">Categories</option>\n                {categories &&\n                  categories.map(category => (\n                    <Option key={category.value} value={category.value}>\n                      {category.value}\n                    </Option>\n                  ))}\n              </Field>\n              <ErrMsgCategories name=\"category\" component=\"div\" />\n\n              {values.category === 'Verb' && (\n                <RadioBtnWrapper>\n                  <RadioLabel>\n                  <RadioInput\n                      type=\"radio\"\n                      name=\"verbType\"\n                      value=\"regular\"\n                      checked={verbType === 'regular'}\n                      onChange={() => {\n                        setVerbType('regular');\n                        setFieldValue('isIrregular', false);\n                      }}\n                    />\n                    Regular\n                  </RadioLabel>\n                  <RadioLabel>\n                    <RadioInput\n                      type=\"radio\"\n                      name=\"verbType\"\n                      value=\"irregular\"\n                      checked={verbType === 'irregular'}\n                      onChange={() => {\n                        setVerbType('irregular');\n                        setFieldValue('isIrregular', true);\n                      }}\n                    />\n                    Irregular\n                  </RadioLabel>\n                  <ErrorMessage name=\"verbType\" component=\"div\" />\n                </RadioBtnWrapper>\n              )}\n            </CategoriesWrapper>\n\n            <FormWrapper>\n            <InputWrapper>\n              <LabelStyle htmlFor=\"ua\">\n                <FlagIcon>\n                  <use href={`${sprite}#icon-ua`}></use>\n                </FlagIcon>\n                Ukrainian\n              </LabelStyle>\n                <FieldStyle type=\"text\" name=\"ua\" id=\"ua\" />\n            </InputWrapper>\n                <ErrMsgStyle name=\"ua\" component=\"div\" />\n  \n           <InputWrapper>\n              <LabelStyle htmlFor=\"uk\">\n                <FlagIcon>\n                  <use href={`${sprite}#icon-uk`}></use>\n                </FlagIcon>\n                English\n              </LabelStyle>\n              <FieldStyle type=\"text\" name=\"en\" id=\"uk\" />\n           </InputWrapper>\n            <ErrMsgStyle name=\"en\" component=\"div\" />\n  \n        </FormWrapper>\n\n            <BtnWrapper>\n              <FormBtn type=\"submit\">Add</FormBtn>\n              <FormBtn type=\"button\" onClick={toggleModal}>\n                Cancel\n              </FormBtn>\n            </BtnWrapper>\n          </FormStyle>\n        )}\n      </Formik>\n    </AddWordModalContainer>\n  );\n};\n\n\n","import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const AddWordModalContainer = styled.div`\n  position: absolute;\n  width: 342px;\n  max-height: 100vh;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scalex(1);\n  border-radius: 15px;\n  background: ${({ theme }) => theme.green};\n  padding: 48px 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 627px;\n    padding: 48px 64px;\n  }\n`;\n\nexport const BtnClose = styled.svg`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n    top: 20px;\n    right: 20px;\n  }\n`;\n\n// * =========== FORM ===========\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 32px;\n    align-items: center;\n  }\n`;\n\nexport const LabelStyle = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 4.5px;\n  margin-bottom: 4px;\n  font-weight: 500;\n  font-size: 14px;\n  color: ${({ theme }) => theme.white};\n\n  @media screen and (min-width: 768px) {\n    order: 2;\n    margin-bottom: 0;\n    gap: 8px;\n  }\n`;\n\nexport const FlagIcon = styled.svg`\n  width: 28px;\n  height: 28px;\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nexport const FieldStyle = styled(Field)`\n  border: 1px solid #d1d5db;\n  background: ${({ theme }) => theme.green};\n  border-radius: 15px;\n  padding: 12px 24px;\n  width: 311px;\n  height: 48px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 11.5;\n  color: ${({ theme }) => theme.white};\n  margin-bottom: 16px;\n\n  :hover {\n    outline: none;\n    border-color: ${({ theme }) => theme.white};\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.white};\n  }\n\n  @media screen and (min-width: 768px) {\n    order: 1;\n    border: 1px solid rgba(252, 252, 252, 0.3);\n    padding: 16px 18px;\n    width: 354px;\n    height: 56px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const ErrMsgStyle = styled(ErrorMessage)`\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 120%;\n  color: ${({ theme }) => theme.white};\n  margin-top: -10px;\n  margin-bottom: 16px;\n`;\n\nexport const ErrMsgCategories = styled(ErrorMessage)`\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 1.2;\n  color: ${({ theme }) => theme.white};\n  margin-top: 10px;\n  margin-bottom: 16px;\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    gap: 10px;\n    margin-top: 32px;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  border: 1px solid rgba(252, 252, 252, 0.4);\n  border-radius: 30px;\n  padding: 12px 45px;\n  width: 159px;\n  height: 48px;\n  background: ${({ theme }) => theme.green};\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.white};\n\n  &:hover {\n    background: ${({ theme }) => theme.white};\n    color: ${({ theme }) => theme.black};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 245px;\n    height: 56px;\n  }\n`;\n// * =========== FORM ===========\n","// import React, { useEffect, useState } from 'react';\n// import toast from 'react-hot-toast';\n// import { useDispatch } from 'react-redux';\n// import {\n//   selectCategories,\n//   selectSelectedWord,\n//   selectWordsError,\n// } from '../../redux/selectors';\n\nimport * as Yup from 'yup';\nimport {\n  AddWordModalContainer,\n  BtnClose,\n  BtnWrapper,\n  ErrMsgStyle,\n  FieldStyle,\n  FlagIcon,\n  FormBtn,\n  FormStyle,\n  FormWrapper,\n  InputWrapper,\n  LabelStyle,\n} from './EditWordModal.styled';\nimport sprite from '../../icons/sprites.svg';\nimport { Formik } from 'formik';\n\nconst validationSchema = Yup.object().shape({\n  category: Yup.string().required('Category is required'),\n  verbType: Yup.string().when('category', {\n    is: 'verb',\n    then: Yup.string().required('Verb type is required'),\n  }),\n  en: Yup.string()\n    .matches(/\\b[A-Za-z'-]+(?:\\s+[A-Za-z'-]+)*\\b/, 'Invalid English input')\n    .required('English is required'),\n  ua: Yup.string()\n    .matches(/^(?![A-Za-z])[А-ЯІЄЇҐґа-яієїʼ\\s]+$/u, 'Invalid Ukrainian input')\n    .required('Ukrainian is required'),\n});\n\nexport const EditWordModal = ({ toggleModal, selectedWord }) => {\n  // const dispatch = useDispatch();\n  \n  const handleSubmit = values => {\n    console.log(values);\n  };\n\n  return (\n    <AddWordModalContainer>\n      <BtnClose onClick={toggleModal} type=\"button\">\n        <svg>\n          <use href={`${sprite}#icon-close`}></use>\n        </svg>\n      </BtnClose>\n\n      <Formik\n        initialValues={{\n          en: selectedWord.en,\n          ua: selectedWord.ua,\n          category: selectedWord.category,\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values }) => (\n          <FormStyle>\n            <FormWrapper>\n              <InputWrapper>\n                <LabelStyle htmlFor=\"ua\">\n                  <FlagIcon>\n                    <use href={`${sprite}#icon-ua`}></use>\n                  </FlagIcon>\n                  Ukrainian\n                </LabelStyle>\n                <FieldStyle type=\"text\" name=\"ua\" id=\"ua\" />\n              </InputWrapper>\n              <ErrMsgStyle name=\"ua\" component=\"div\" />\n\n              <InputWrapper>\n                <LabelStyle htmlFor=\"en\">\n                  <FlagIcon>\n                    <use href={`${sprite}#icon-uk`}></use>\n                  </FlagIcon>\n                  English\n                </LabelStyle>\n                <FieldStyle type=\"text\" name=\"en\" id=\"en\" />\n              </InputWrapper>\n              <ErrMsgStyle name=\"en\" component=\"div\" />\n            </FormWrapper>\n\n            <BtnWrapper>\n              <FormBtn type=\"submit\">Save</FormBtn>\n              <FormBtn type=\"button\" onClick={toggleModal}>\n                Cancel\n              </FormBtn>\n            </BtnWrapper>\n          </FormStyle>\n        )}\n      </Formik>\n    </AddWordModalContainer>\n  );\n};\n","import { Dashboard } from 'components/Dashboard/Dashboard';\nimport React, { useState } from 'react';\nimport { DictionaryContainer } from './DictionaryPage.styled';\nimport { WordsTable } from 'components/WordTable/WordsTable';\nimport { Modal } from 'components/Modal/Modal';\nimport { AddWordModal } from 'components/AddWordModal/AddWordModal';\nimport { EditWordModal } from 'components/EditWordModal/EditWordModal';\n\nconst DictionaryPage = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [addWordModal, setAddWordModal] = useState(false);\n  const [editWordModal, setEditWordModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpen(prevState => !prevState);\n  };\n\n  function onClickAddWord() {\n    setEditWordModal(false);\n    setAddWordModal(true);\n    toggleModal();\n  }\n  function onClickEditWord() {\n    setAddWordModal(false);\n    setEditWordModal(true);\n    toggleModal();\n  }\n\n  const close = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <DictionaryContainer>\n      <Dashboard onClickAddWord={onClickAddWord}/>\n      <WordsTable onClickEditWord={onClickEditWord} />\n\n      {isOpen && (\n        <Modal toggleModal={toggleModal} >\n          {addWordModal && <AddWordModal toggleModal={toggleModal} close={close} />}\n          {editWordModal && <EditWordModal toggleModal={toggleModal} close={close}/>}\n        </Modal>\n      )}\n    </DictionaryContainer>\n  );\n};\n\nexport default DictionaryPage;\n"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSearch","_ref","svgRef","title","titleId","props","width","height","fill","xmlns","ref","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","FiltersContainer","styled","_templateObject","_taggedTemplateLiteral","InputWrapper","_templateObject2","SearchInput","_templateObject3","theme","white1","_ref2","black","_ref3","green","_ref4","SearchIcon","SearchSvg","_templateObject4","CategoriesWrapper","selectStyles","input","provided","state","_objectSpread","margin","padding","valueContainer","control","border","borderRadius","background","outline","borderColor","boxShadow","dropdownIndicator","color","cursor","placeholder","fontSize","fontStyle","fontWeight","lineHeight","option","backgroundColor","isFocused","singleValue","RadioBtnWrapper","RadioLabel","RadioInput","Categories","categories","useSelector","selectCategories","selectedCategory","selectSelectedCategory","dispatch","useDispatch","handleVerbTypeChange","event","setVerbType","value","_jsxs","children","_jsx","Select","styles","options","onChange","selectedOption","setCategory","type","name","Filters","_useState","useState","_useState2","_slicedToArray","searchKeyword","setSearchKeyword","useEffect","fetchCategories","debounceTimer","setTimeout","setKeyword","clearTimeout","trim","DashboardContainer","StatisticsContainer","StatisticsText","Wrapper","AddWordButton","_templateObject5","NavLinkStyle","Link","_templateObject6","IconSvg","_templateObject7","Dashboard","onClickAddWord","onClick","href","concat","sprite","to","DictionaryContainer","WordsTableContainer","TableStyle","TableHead","HeadRow","TableBody","TableRow","white","IconContainer","FlagIcon","_templateObject8","PopoverContainer","ActionsPopoverContainer","Icon","ActionsBtn","IconDots","ActionsPopover","word","onClickEditWord","console","log","isOpen","setIsOpen","_useState3","_useState4","selectedWord","setSelectedWord","togglePopover","Popover","body","place","preferPlace","tipSize","onOuterAction","WordsTable","words","selectWords","IconUk","text","IconUa","fetchOwnWords","columns","React","Header","accessor","Cell","row","original","data","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","AddWordModalContainer","BtnClose","ModalTitle","ModaltText","FormStyle","Form","FormWrapper","LabelStyle","_templateObject9","FieldStyle","Field","_templateObject10","_ref5","_ref6","_ref7","_ref8","ErrMsgStyle","ErrorMessage","_templateObject11","_ref9","ErrMsgCategories","_templateObject12","_ref10","BtnWrapper","_templateObject13","FormBtn","_templateObject14","_ref11","_ref12","_ref13","_ref14","_templateObject15","StyledSelect","_templateObject16","_ref15","_ref16","Option","_templateObject17","_ref17","_ref18","_templateObject18","_templateObject19","_templateObject20","_ref19","_templateObject21","_ref20","_ref21","_ref22","validationSchema","Yup","shape","category","required","verbType","when","is","then","en","matches","ua","AddWordModal","toggleModal","close","error","selectWordsError","toast","Formik","initialValues","onSubmit","values","dataToSend","isIrregular","addWord","catch","setFieldValue","as","component","checked","htmlFor","EditWordModal","addWordModal","setAddWordModal","_useState5","_useState6","editWordModal","setEditWordModal","prevState","Modal"],"sourceRoot":""}